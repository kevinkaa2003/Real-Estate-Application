{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\OneDrive\\\\Documents\\\\Visual Studio Code\\\\.vscode\\\\Real Estate App\\\\realestateapp-main\\\\realestateappfrontend\\\\realestateapp\\\\src\\\\ManageBooking.js\",\n  _s4 = $RefreshSig$();\nimport './ManageBooking.css';\nimport Navbar from './Custom_Navbar';\nimport CustomFooter from './Custom_Footer';\nimport { useState, useEffect, useContext, use } from 'react';\nimport { DataContext } from './DataProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ManageBookings = () => {\n  _s4();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  const [savedScroll, setSavedScroll] = useState(0);\n  const today = new Date();\n  const [selectedYear, setSelectedYear] = useState(today.getFullYear());\n  const [selectedMonth, setSelectedMonth] = useState(today.getMonth());\n  const [reservationData, setReservationData] = useState([]);\n  const [selectedReservation, setSelectedReservation] = useState(null);\n  const [editReservation, setEditReservation] = useState(false);\n  const [editedReservation, setEditedReservation] = useState({});\n  const {\n    dormitoryPrice,\n    setDormitoryPrice,\n    doubleSharedPrice,\n    setDoubleSharedPrice,\n    doublePrivatePrice,\n    setDoublePrivatePrice,\n    japaneseTwinPrice,\n    setJapaneseTwinPrice,\n    fourBedPrice,\n    setFourBedPrice,\n    musicSchedule,\n    setMusicSchedule\n  } = useContext(DataContext);\n\n  //Room Option Variables\n  const roomTypeOptionsArray = ['Dormitory', 'Double Room Shared Toilet & Shower', 'Double Room Private Toilet & Bath', 'Japanese Twin Room', '4 Bed Room'];\n  const dormitoryRooms = ['202A', '202B', '202C', '202D', '202E', '202F', '202G', '202H', '202I', '202K', '202L', '203A', '203B', '203C', '203D', '203E', '203F', '203G', '203H', '203I', '203K', '203L', '204A', '204B', '204C', '204D', '204E', '204F', '204G', '204H', '204I', '204K', '204L'];\n  const doubleSharedRooms = ['201', '205'];\n  const doubleRoomPrivate = ['206', '207'];\n  const japaneseTwinRooms = ['301', '302', '303', '304', '305', '306', '307'];\n  const fourbedRooms = ['401', '402', '403', '404', '405', '406'];\n\n  //Calendar Generation Helper\n  function getDaysInMonth(month, year) {\n    return new Date(year, month + 1, 0).getDate();\n  }\n  ;\n\n  // Helper: Parse MySQL DATE string as local date (not UTC)\n  function parseLocalDate(dateStr) {\n    const [year, month, day] = dateStr.split('-').map(Number);\n    return new Date(year, month - 1, day);\n  }\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const [selectedDay, setSelectedDay] = useState(null); // e.g. '2025-06-12'\n  const [showDayModal, setShowDayModal] = useState(false);\n  const [dayReservations, setDayReservations] = useState([]);\n  const getReservationsForDate = dateStr => {\n    return reservationData.filter(res => {\n      const start = parseLocalDate(res[\"Start Date\"]);\n      const end = parseLocalDate(res[\"End Date\"]);\n      const d = parseLocalDate(dateStr);\n      return d >= start && d <= end;\n    });\n  };\n\n  //Handler for clicking a day\n  const handleDayClick = dateStr => {\n    const reservations = getReservationsForDate(dateStr);\n    setDayReservations(reservations);\n    setSelectedDay(dateStr);\n    setShowDayModal(true);\n  };\n\n  //Handler for selecting a reservation within the day\n  const handleReservationClick = reservation => {\n    setSelectedReservation(reservation);\n    setEditReservation(false);\n    setShowDayModal(false);\n  };\n\n  //Calculate Total rooms in building\n  const totalRooms = dormitoryRooms.length + doubleSharedRooms.length + doubleRoomPrivate.length + japaneseTwinRooms.length + fourbedRooms.length;\n  const DisplayMonth = () => {\n    const daysInMonth = getDaysInMonth(selectedMonth, selectedYear);\n    const firstDay = new Date(selectedYear, selectedMonth, 1).getDay();\n    const rows = [];\n    let cells = [];\n    for (let i = 0; i < firstDay; i++) {\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }, this));\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const dateObj = new Date(selectedYear, selectedMonth, day);\n      const yyyy = dateObj.getFullYear();\n      const mm = String(dateObj.getMonth() + 1).padStart(2, '0');\n      const dd = String(dateObj.getDate()).padStart(2, '0');\n      const dateStr = `${yyyy}-${mm}-${dd}`;\n      const reservationsForDay = getReservationsForDate(dateStr);\n      const numReservations = reservationsForDay.length;\n      const uniqueRooms = new Set(reservationsForDay.map(r => r[\"Room Number\"]));\n      const isHotelFull = uniqueRooms.size >= totalRooms;\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {\n        className: isHotelFull ? \"hotel-full\" : \"\",\n        style: {\n          position: \"relative\",\n          cursor: \"pointer\",\n          background: isHotelFull ? \"#ffcccc\" : undefined\n        },\n        onClick: () => handleDayClick(dateStr),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendardaynumber\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), isHotelFull ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontWeight: \"bold\"\n          },\n          children: \"Hotel Full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservationtotal\",\n          children: [numReservations, \" Reservation\", numReservations !== 1 ? \"s\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, `${selectedYear}-${selectedMonth}-${day}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this));\n      if (cells.length % 7 === 0) {\n        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: cells\n        }, `row-${day}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 27\n        }, this));\n        cells = [];\n      }\n    }\n    if (cells.length) {\n      while (cells.length < 7) {\n        cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-end-${cells.length}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 28\n        }, this));\n      }\n      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cells\n      }, \"row-last\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookingmanagercalendarbody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendarcontrols\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMonth,\n            onChange: e => {\n              setSelectedMonth(Number(e.target.value));\n            },\n            children: months.map((m, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: idx,\n              children: m\n            }, m, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"yearselection\",\n            type: \"number\",\n            value: selectedYear,\n            onChange: e => {\n              setSelectedYear(Number(e.target.value));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendartablewrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"calendartable\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Su\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Mo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 48\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Tu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 59\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"We\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 70\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Th\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 81\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Fr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 92\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 103\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: rows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), showDayModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservationmodaloverlay\",\n        onClick: () => setShowDayModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservationmodalcontentcalendar\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Reservations for \", selectedDay]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), dayReservations.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No reservations for this day.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: dayReservations.map(res => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: \"10px\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => handleReservationClick(res),\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [res[\"Name\"], \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 45\n                }, this), \" Room \", res[\"Room Number\"], \", \", res[\"Room Option\"], \", Check In: \", res[\"Check In\"], \", Check Out: \", res[\"Check Out\"]]\n              }, res[\"Reservation ID\"], true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"closemodalbtn\",\n            onClick: () => setShowDayModal(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  };\n\n  //Get Reservation Data Function\n  const getReservationData = async () => {\n    //GET request\n    try {\n      const response = await fetch('http://localhost:5000/reservationdata', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include' //This allows cookies to be sent and received\n      });\n      const data = await response.json();\n\n      //Valid response check\n      if (response.ok) {\n        setReservationData(data.data);\n        console.log('Reservations Received');\n      }\n    } catch (error) {\n      console.error(\"Error Retrieving Reservations:\", error.response ? error.response.data : error.message);\n    }\n  };\n  useEffect(() => {\n    getReservationData();\n  }, []);\n  useEffect(() => {\n    console.log(\"Reservation Data: \", reservationData);\n  }, [reservationData]);\n\n  // Helper to get price per room type\n  const getRoomPrice = roomOption => {\n    switch (roomOption) {\n      case 'Dormitory':\n        return dormitoryPrice;\n      case 'Double Room Shared Toilet & Shower':\n        return doubleSharedPrice;\n      case 'Double Room Private Toilet & Bath':\n        return doublePrivatePrice;\n      case 'Japanese Twin Room':\n        return japaneseTwinPrice;\n      case '4 Bed Room':\n        return fourBedPrice;\n      default:\n        return 0;\n    }\n  };\n\n  // Helper to get number of nights (exclusive of end date)\n  const getNights = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    // Nights = difference in days (exclusive of end date)\n    const diffTime = end.getTime() - start.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return Math.max(1, diffDays);\n  };\n\n  // Calculate total for the current edit form\n  const getEditTotal = () => {\n    const startDate = editedReservation[\"Start Date\"] || selectedReservation[\"Start Date\"];\n    const endDate = editedReservation[\"End Date\"] || selectedReservation[\"End Date\"];\n    const roomOption = editedReservation[\"Room Option\"] || selectedReservation[\"Room Option\"];\n    if (!startDate || !endDate || !roomOption) return 0;\n    const nights = getNights(startDate, endDate);\n    const price = getRoomPrice(roomOption);\n    return (nights * price).toFixed(2);\n  };\n  const deleteReservation = async reservation => {\n    try {\n      const response = await fetch('http://localhost:5000/reservationdelete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reservationId: reservation[\"Reservation ID\"]\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        getReservationData();\n        setSelectedReservation(null);\n        setEditReservation(false);\n        alert(\"Reservation Deleted!\");\n      } else {\n        alert('Failed to delete reservation.');\n      }\n    } catch (error) {\n      console.error(\"Error Deleting Reservation: \", error);\n    }\n  };\n\n  //Calendar for showing reservation date ranges\n\n  // State for reservation calendar modal\n  const [showReservationCalendar, setShowReservationCalendar] = useState(false);\n  const [calendarReservation, setCalendarReservation] = useState(null);\n  const showOnCalendar = reservation => {\n    setCalendarReservation(reservation);\n    setShowReservationCalendar(true);\n  };\n\n  // Helper: get all dates between two dates (inclusive)\n  function getDatesBetween(start, end) {\n    const arr = [];\n    // Parse start and end as year, month, day (local)\n    const [sy, sm, sd] = start.split('-').map(Number);\n    const [ey, em, ed] = end.split('-').map(Number);\n    let dt = new Date(sy, sm - 1, sd);\n    const endDt = new Date(ey, em - 1, ed);\n    while (dt <= endDt) {\n      const yyyy = dt.getFullYear();\n      const mm = String(dt.getMonth() + 1).padStart(2, '0');\n      const dd = String(dt.getDate()).padStart(2, '0');\n      arr.push(`${yyyy}-${mm}-${dd}`);\n      dt.setDate(dt.getDate() + 1);\n    }\n    return arr;\n  }\n  const getRoomArray = roomOption => {\n    switch (roomOption) {\n      case \"Dormitory\":\n        return dormitoryRooms;\n      case \"Double Room Shared Toilet & Shower\":\n        return doubleSharedRooms;\n      case \"Double Room Private Toilet & Bath\":\n        return doubleRoomPrivate;\n      case \"Japanese Twin Room\":\n        return japaneseTwinRooms;\n      case \"4 Bed Room\":\n        return fourbedRooms;\n      default:\n        return [];\n    }\n  };\n\n  //Reservation Table Handling\n\n  const [newStartIndex, setNewStartIndex] = useState(0);\n  const [newEndIndex, setNewEndIndex] = useState(0);\n  const [startIndex, setStartIndex] = useState(0);\n  const [endIndex, setEndIndex] = useState(15);\n  useEffect(() => {\n    console.log(\"Display Indices: \", startIndex, endIndex);\n  }, [startIndex, endIndex]);\n  const incrementReservationDisplay = () => {\n    if (endIndex >= reservationData.length) {\n      alert(\"No Future Reservations.\");\n    } else {\n      setStartIndex(startIndex + 15);\n      setEndIndex(endIndex + 15);\n    }\n  };\n  const decrementReservationDisplay = () => {\n    if (startIndex == 0) {\n      alert(\"No Previous Reservations.\");\n    } else {\n      setStartIndex(startIndex - 15);\n      setEndIndex(endIndex - 15);\n    }\n  };\n  const ReservationsTable = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservationstablewrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchforreservation\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        children: \" Search for Reservation by Name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reservation ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Check In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Check Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reservationData.slice(startIndex, endIndex).map((res, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => {\n            setSelectedReservation(res);\n            setEditReservation(false);\n          },\n          className: \"reservationrow\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Start Date\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"End Date\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Room Number\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Room Option\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"People\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Total\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Reservation ID\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Check In\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Check Out\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 33\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }, this), selectedReservation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservationmodaloverlay\",\n      onClick: () => {\n        setSelectedReservation(null);\n        setEditReservation(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservationmodalcontent\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reservation Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }, this), editReservation ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: async e => {\n            e.preventDefault();\n            const startDate = (editedReservation[\"Start Date\"] || selectedReservation[\"Start Date\"]).slice(0, 10);\n            const endDate = (editedReservation[\"End Date\"] || selectedReservation[\"End Date\"]).slice(0, 10);\n            const roomOption = editedReservation[\"Room Option\"] || selectedReservation[\"Room Option\"];\n            const roomNumber = editedReservation[\"Room Number\"] || selectedReservation[\"Room Number\"];\n            const reservationId = selectedReservation[\"Reservation ID\"];\n            const otherReservations = reservationData.filter(r => r[\"Room Option\"] === roomOption && r[\"Room Number\"] === roomNumber && r[\"Reservation ID\"] !== reservationId);\n            const optionReservations = reservationData.filter(r => r[\"Room Option\"] === roomOption && r[\"Reservation ID\"] !== reservationId);\n            const getDateRange = (start, end) => {\n              const arr = [];\n              let dt = new Date(start);\n              const endDt = new Date(end);\n              while (dt < endDt) {\n                arr.push(dt.toISOString().slice(0, 10));\n                dt.setDate(dt.getDate() + 1);\n              }\n              return arr;\n            };\n            const hasOverlap = otherReservations.some(r => !(endDate <= r[\"Start Date\"] || startDate >= r[\"End Date\"]));\n            if (hasOverlap) {\n              alert(\"This room is already booked for the selected dates.\");\n              return;\n            }\n            const roomArray = getRoomArray(roomOption);\n            const dateRoomMap = {};\n            for (const r of optionReservations) {\n              const dates = getDateRange(r[\"Start Date\"], r[\"End Date\"]);\n              for (const d of dates) {\n                if (!dateRoomMap[d]) dateRoomMap[d] = new Set();\n                dateRoomMap[d].add(r[\"Room Number\"]);\n              }\n            }\n            const isFullyBooked = date => dateRoomMap[date] && dateRoomMap[date].size >= roomArray.length;\n            const shiftDate = (dateStr, offset) => {\n              const d = new Date(dateStr);\n              d.setDate(d.getDate() + offset);\n              return d.toISOString().slice(0, 10);\n            };\n            const isFirstDayOfFullyBookedRange = date => isFullyBooked(date) && !isFullyBooked(shiftDate(date, -1));\n            const isLastDayOfFullyBookedRange = date => isFullyBooked(date) && !isFullyBooked(shiftDate(date, 1));\n            const fullRange = getDateRange(startDate, endDate);\n            const middleRange = fullRange.slice(1, -1);\n            const startIsValid = !isFullyBooked(startDate) || isLastDayOfFullyBookedRange(startDate);\n            const endIsValid = !isFullyBooked(endDate) || isFirstDayOfFullyBookedRange(endDate);\n            const middleIsValid = !middleRange.some(isFullyBooked);\n            if (!startIsValid) {\n              alert(\"Start date cannot land on a fully booked day unless it's the LAST day of that range.\");\n              return;\n            }\n            if (!endIsValid) {\n              alert(\"End date cannot land on a fully booked day unless it's the FIRST day of that range.\");\n              return;\n            }\n            if (!middleIsValid) {\n              alert(\"Cannot include fully booked days in the middle of the range.\");\n              return;\n            }\n\n            // Submit\n            const updatedReservation = {\n              ...selectedReservation,\n              ...editedReservation\n            };\n            try {\n              const response = await fetch('http://localhost:5000/reservationdataupdate', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(updatedReservation),\n                credentials: 'include'\n              });\n              if (response.ok) {\n                getReservationData();\n                setSelectedReservation(updatedReservation);\n                setEditReservation(false);\n              } else {\n                alert(\"Reservation update failed.\");\n              }\n            } catch (err) {\n              console.error(\"Failed to update reservation:\", err);\n              alert(\"An error occurred while updating.\");\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedReservation[\"Name\"] !== undefined ? editedReservation[\"Name\"] : selectedReservation[\"Name\"],\n                onChange: e => setEditedReservation(prev => ({\n                  ...prev,\n                  [\"Name\"]: e.target.value\n                })),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editedReservation[\"Start Date\"] !== undefined ? editedReservation[\"Start Date\"] : selectedReservation[\"Start Date\"],\n                onChange: e => {\n                  const newStart = e.target.value;\n                  const currentEnd = editedReservation[\"End Date\"] !== undefined ? editedReservation[\"End Date\"] : selectedReservation[\"End Date\"];\n                  if (newStart >= currentEnd) {\n                    alert(\"Start Date Cannot be On or After End Date.\");\n                    return;\n                  }\n                  setEditedReservation(prev => ({\n                    ...prev,\n                    [\"Start Date\"]: e.target.value\n                  }));\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editedReservation[\"End Date\"] !== undefined ? editedReservation[\"End Date\"] : selectedReservation[\"End Date\"],\n                onChange: e => {\n                  const newEnd = e.target.value;\n                  const currentStart = editedReservation[\"Start Date\"] !== undefined ? editedReservation[\"Start Date\"] : selectedReservation[\"Start Date\"];\n                  if (newEnd <= currentStart) {\n                    alert(\"End Date Cannot Be On or Before Start Date.\");\n                    return;\n                  }\n                  setEditedReservation(prev => ({\n                    ...prev,\n                    [\"End Date\"]: e.target.value\n                  }));\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Room Option:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedReservation[\"Room Option\"] !== undefined ? editedReservation[\"Room Option\"] : selectedReservation[\"Room Option\"],\n                onChange: e => {\n                  const newRoomOption = e.target.value;\n                  let defaultRoom = \"\";\n                  if (newRoomOption === 'Dormitory') defaultRoom = dormitoryRooms[0];else if (newRoomOption === 'Double Room Shared Toilet & Shower') defaultRoom = doubleSharedRooms[0];else if (newRoomOption === 'Double Room Private Toilet & Bath') defaultRoom = doubleRoomPrivate[0];else if (newRoomOption === 'Japanese Twin Room') defaultRoom = japaneseTwinRooms[0];else if (newRoomOption === '4 Bed Room') defaultRoom = fourbedRooms[0];\n                  setEditedReservation(prev => ({\n                    ...prev,\n                    [\"Room Option\"]: newRoomOption,\n                    [\"Room Number\"]: defaultRoom // set default room number\n                  }));\n                },\n                required: true,\n                children: roomTypeOptionsArray.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: opt,\n                  children: opt\n                }, opt, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Room Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedReservation[\"Room Number\"] !== undefined ? editedReservation[\"Room Number\"] : selectedReservation[\"Room Number\"],\n                onChange: e => setEditedReservation(prev => ({\n                  ...prev,\n                  [\"Room Number\"]: e.target.value\n                })),\n                required: true,\n                children: (() => {\n                  const roomType = editedReservation[\"Room Option\"] !== undefined ? editedReservation[\"Room Option\"] : selectedReservation[\"Room Option\"];\n                  if (roomType === 'Dormitory') return dormitoryRooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 94\n                  }, this));\n                  if (roomType === 'Double Room Shared Toilet & Shower') return doubleSharedRooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 122\n                  }, this));\n                  if (roomType === 'Double Room Private Toilet & Bath') return doubleRoomPrivate.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 121\n                  }, this));\n                  if (roomType === 'Japanese Twin Room') return japaneseTwinRooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 106\n                  }, this));\n                  if (roomType === '4 Bed Room') return fourbedRooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 93\n                  }, this));\n                  return null;\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"People:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: 1,\n                value: editedReservation[\"People\"] !== undefined ? editedReservation[\"People\"] : selectedReservation[\"People\"],\n                onChange: e => setEditedReservation(prev => ({\n                  ...prev,\n                  [\"People\"]: e.target.value\n                })),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 33\n              }, this), \" \\xA5\", getEditTotal()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Reservation ID: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 29\n              }, this), selectedReservation[\"Reservation ID\"]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Check In:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedReservation[\"Check In\"] !== undefined ? editedReservation[\"Check In\"] : selectedReservation[\"Check In\"] || \"Yes\",\n                onChange: e => {\n                  const newValue = e.target.value;\n                  const checkOutValue = editedReservation[\"Check Out\"] !== undefined ? editedReservation[\"Check Out\"] : selectedReservation[\"Check Out\"];\n                  if (checkOutValue === \"Yes\" && newValue === \"No\") {\n                    alert(\"Cannot select 'No' for Check In when Check Out is 'Yes'.\");\n                    return;\n                  }\n                  setEditedReservation(prev => ({\n                    ...prev,\n                    [\"Check In\"]: newValue\n                  }));\n                },\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Check Out:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedReservation[\"Check Out\"] !== undefined ? editedReservation[\"Check Out\"] : selectedReservation[\"Check Out\"] || \"yes\",\n                onChange: e => {\n                  const newValue = e.target.value;\n                  const checkInValue = editedReservation[\"Check In\"] !== undefined ? editedReservation[\"Check In\"] : selectedReservation[\"Check In\"];\n                  if (checkInValue === \"No\" && newValue === \"Yes\") {\n                    alert(\"Cannot select 'Yes' for Check Out when Check In is 'No'.\");\n                    return;\n                  }\n                  setEditedReservation(prev => ({\n                    ...prev,\n                    [\"Check Out\"]: newValue\n                  }));\n                },\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservationdetailsbuttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"closemodalbtn\",\n              onClick: () => setEditReservation(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"editreservationbtn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(selectedReservation).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [key, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 29\n              }, this), \" \", value === null || value === void 0 ? void 0 : value.toString()]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservationdetailsbuttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"closemodalbtn\",\n              onClick: () => setSelectedReservation(null),\n              children: \"Close Reservation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"editreservationbtn\",\n              onClick: () => {\n                setEditReservation(true);\n                setEditedReservation(selectedReservation);\n              },\n              children: \"Edit Reservation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deletereservationbtn\",\n              onClick: () => {\n                const userConfirm = window.confirm(\"Are you Sure You want to Delete this Reservation?\");\n                if (userConfirm) {\n                  deleteReservation(selectedReservation);\n                }\n              },\n              children: \"Delete Reservation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"showoncalendarbtn\",\n              onClick: () => showOnCalendar(selectedReservation),\n              children: \"Show On Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservationtablenavigationbuttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reservationtablepreviousbtn\",\n        onClick: () => {\n          decrementReservationDisplay();\n        },\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reservationtablenextbtn\",\n        onClick: () => {\n          incrementReservationDisplay();\n        },\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 9\n  }, this);\n  const ReservationCalendarModal = ({\n    reservation\n  }) => {\n    _s();\n    const [calendarYear, setCalendarYear] = useState(new Date().getFullYear());\n    const [calendarMonth, setCalendarMonth] = useState(new Date().getMonth());\n    useEffect(() => {\n      if (reservation) {\n        setCalendarYear(new Date(reservation[\"Start Date\"]).getFullYear());\n        setCalendarMonth(new Date(reservation[\"Start Date\"]).getMonth());\n      }\n    }, [reservation]);\n    if (!reservation) return null;\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    // Get all dates the reservation occupies\n    const reservationDates = new Set(getDatesBetween(reservation[\"Start Date\"], reservation[\"End Date\"]));\n    const roomNumber = reservation[\"Room Number\"];\n\n    // Calendar rendering logic for selected month/year\n    const daysInMonth = getDaysInMonth(calendarMonth, calendarYear);\n    const firstDay = new Date(calendarYear, calendarMonth, 1).getDay();\n    const rows = [];\n    let cells = [];\n    for (let i = 0; i < firstDay; i++) {\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 24\n      }, this));\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const yyyy = calendarYear;\n      const mm = String(calendarMonth + 1).padStart(2, '0');\n      const dd = String(day).padStart(2, '0');\n      const dateStr = `${yyyy}-${mm}-${dd}`;\n      const isReserved = reservationDates.has(dateStr);\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {\n        style: {\n          background: isReserved ? \"#3ae13a\" : undefined,\n          textAlign: \"center\",\n          fontWeight: isReserved ? \"bold\" : undefined,\n          color: isReserved ? \"red\" : undefined,\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendardaynumber\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 21\n        }, this), isReserved && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            fontSize: \"1.1em\"\n          },\n          children: roomNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 25\n        }, this)]\n      }, `${yyyy}-${calendarMonth}-${day}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 17\n      }, this));\n      if (cells.length % 7 === 0) {\n        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: cells\n        }, `row-${day}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 27\n        }, this));\n        cells = [];\n      }\n    }\n    if (cells.length) {\n      while (cells.length < 7) {\n        cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-end-${cells.length}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 28\n        }, this));\n      }\n      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cells\n      }, \"row-last\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 23\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendarcontrols\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: calendarMonth,\n          onChange: e => setCalendarMonth(Number(e.target.value)),\n          children: months.map((m, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: m\n          }, m, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"yearselection\",\n          type: \"number\",\n          value: calendarYear,\n          onChange: e => setCalendarYear(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendartablewrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"calendartable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Su\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"We\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Th\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 73\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 84\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 95\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  _s(ReservationCalendarModal, \"RWuKzLALnxNv7F/olGYNu9pQIMM=\");\n  const [editRoomPrices, setEditRoomPrices] = useState(false);\n  const ChangeRoomPrices = () => {\n    _s2();\n    // Local state for editing prices\n    const [localPrices, setLocalPrices] = useState({\n      dormitory: dormitoryPrice,\n      doubleShared: doubleSharedPrice,\n      doublePrivate: doublePrivatePrice,\n      japaneseTwin: japaneseTwinPrice,\n      fourBed: fourBedPrice\n    });\n\n    // When entering edit mode, sync local state with context\n    useEffect(() => {\n      if (editRoomPrices) {\n        setLocalPrices({\n          dormitory: dormitoryPrice,\n          doubleShared: doubleSharedPrice,\n          doublePrivate: doublePrivatePrice,\n          japaneseTwin: japaneseTwinPrice,\n          fourBed: fourBedPrice\n        });\n        window.scrollTo(0, savedScroll);\n      }\n    }, [editRoomPrices]);\n\n    // Handlers for input changes\n    const handleInputChange = (key, value) => {\n      setLocalPrices(prev => ({\n        ...prev,\n        [key]: value\n      }));\n    };\n\n    // Confirm and update context\n    const handleConfirm = () => {\n      setDormitoryPrice(localPrices.dormitory);\n      setDoubleSharedPrice(localPrices.doubleShared);\n      setDoublePrivatePrice(localPrices.doublePrivate);\n      setJapaneseTwinPrice(localPrices.japaneseTwin);\n      setFourBedPrice(localPrices.fourBed);\n      setEditRoomPrices(false);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!editRoomPrices && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roompricewrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roompricetitle\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Room Prices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roompriceslist\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Dormitory Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", dormitoryPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 63\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Double Shared Room Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", doubleSharedPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Double Private Room Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", doublePrivatePrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 73\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Japanese Twin Room Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", japaneseTwinPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Four Bed Room Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", fourBedPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editroompricesbtn\",\n          onClick: () => {\n            setSavedScroll(window.scrollY);\n            setEditRoomPrices(true);\n          },\n          children: \"Edit Room Prices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 21\n      }, this), editRoomPrices && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roompricewrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roompricetitle\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Room Prices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roompriceslist\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Dormitory Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.dormitory,\n                onChange: e => handleInputChange('dormitory', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Double Shared Room Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.doubleShared,\n                onChange: e => handleInputChange('doubleShared', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Double Private Room Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.doublePrivate,\n                onChange: e => handleInputChange('doublePrivate', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Japanese Twin Room Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.japaneseTwin,\n                onChange: e => handleInputChange('japaneseTwin', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Four Bed Room Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.fourBed,\n                onChange: e => handleInputChange('fourBed', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editroompricesbtn\",\n          onClick: handleConfirm,\n          children: \"Confirm Room Prices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  };\n  _s2(ChangeRoomPrices, \"qIEIeW0dVIrV07sB7W30ZA/yOm0=\");\n  const [editMusicSchedule, setEditMusicSchedule] = useState(false);\n  const [addToMusicSchedule, setAddToMusicSchedule] = useState(false);\n  const [editMusicEvent, setEditMusicEvent] = useState(false);\n  const [viewMusicEvent, setViewMusicEvent] = useState(false);\n  const [selectedMusicEvent, setSelectedMusicEvent] = useState();\n\n  //Fetch Music Schedule data \n  const fetchMusicScheduleData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/musicschedule', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMusicSchedule(data.data);\n        console.log(\"Music Schedule Data Received: \", musicSchedule);\n      }\n    } catch (error) {\n      console.error(\"Error obtaining music schedule data: \", error);\n    }\n  };\n\n  //Fetch Music Data on Mount\n  useEffect(() => {\n    fetchMusicScheduleData();\n    console.log(\"Music Schedule Fetch Initiated.\");\n  }, []);\n  const ChangeMusicSchedule = () => {\n    _s3();\n    const [eventDate, setEventDate] = useState('');\n    const [eventArtist, setEventArtist] = useState('');\n    const [eventTime, setEventTime] = useState('');\n    const [concertID, setConcertID] = useState();\n    const sendMusicScheduleAdd = async () => {\n      const payload = {\n        eventDate,\n        eventArtist,\n        eventTime\n      };\n      try {\n        const request = await fetch('http://localhost:5000/musicscheduleadd', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify(payload)\n        });\n        if (request.ok) {\n          alert(\"Event added successfully!\");\n          fetchMusicScheduleData();\n          console.log('Music Event Request Successful');\n        } else {\n          alert(\"Could Not Add Event!\");\n          console.log(\"Event Could Not be Added.\");\n        }\n      } catch (error) {\n        console.error('Error Sending Music Event Data: ', error);\n      }\n    };\n\n    //Updated Music Event Variable\n\n    const [updatedMusicEvent, setUpdatedMusicEvent] = useState({\n      eventDate,\n      eventTime,\n      eventArtist,\n      concertID\n    });\n    const updateMusicScheduleEvent = async fullevent => {\n      const {\n        eventDate,\n        eventArtist,\n        eventTime,\n        concertID\n      } = fullevent;\n      const payload = {\n        eventDate,\n        eventArtist,\n        eventTime,\n        concertID\n      };\n      try {\n        const request = await fetch('http://localhost:5000/musicscheduleupdate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify(payload)\n        });\n        if (request.ok) {\n          alert(\"Event Updated successfully!\");\n          fetchMusicScheduleData();\n          console.log('Music Event Request Successful');\n        } else {\n          alert(\"Could Not Update Event!\");\n          console.log(\"Event Could Not be Added.\");\n        }\n      } catch (error) {\n        console.error('Error Sending Music Event Data: ', error);\n      }\n    };\n    const deleteMusicEvent = async concertID => {\n      const payload = {\n        concertID\n      };\n      try {\n        const request = await fetch('http://localhost:5000/musicscheduledelete', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (request.ok) {\n          console.log(\"Backend Deletion Request Processed.\");\n          alert(\"Event Deleted.\");\n          fetchMusicScheduleData();\n        }\n      } catch (error) {\n        console.error(\"Event Deletion Frontend Request Failed: \", error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"musicschedulewrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicscheduletitle\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Music Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicscheduletable\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1170,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Artist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1176,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Concert ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1179,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1169,\n              columnNumber: 33\n            }, this), musicSchedule.map((res, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"musicschedulerow\",\n              onClick: () => {\n                setViewMusicEvent(true);\n                setSelectedMusicEvent(res);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: res[\"Date\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: res[\"Artist\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: res[\"Time\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: res[\"Concert ID\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1202,\n                columnNumber: 37\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1184,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addtomusicschedulebtn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAddToMusicSchedule(true);\n            },\n            children: \"Add to Music Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1211,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 21\n      }, this), viewMusicEvent && !editMusicEvent && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewmusiceventoverlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"viewmusiceventcontent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1222,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1226,\n                  columnNumber: 41\n                }, this), selectedMusicEvent[\"Date\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Artist: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1229,\n                  columnNumber: 41\n                }, this), selectedMusicEvent[\"Artist\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Time: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1232,\n                  columnNumber: 41\n                }, this), selectedMusicEvent[\"Time\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Concert ID: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1235,\n                  columnNumber: 42\n                }, this), selectedMusicEvent[\"Concert ID\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1234,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addtomusicschedulebuttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"addtomusicschedulecancelbtn\",\n                onClick: () => {\n                  setViewMusicEvent(false);\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1240,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"addtomusicschedulesubmitbtn\",\n                onClick: () => {\n                  setEditMusicEvent(true);\n                },\n                children: \"Edit Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"addtomusicscheduledeletebtn\",\n                onClick: () => {\n                  setViewMusicEvent(false);\n                  deleteMusicEvent(selectedMusicEvent[\"Concert ID\"]);\n                },\n                children: \"Delete Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1250,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1221,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1220,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), viewMusicEvent && editMusicEvent && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewmusiceventoverlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"viewmusiceventcontent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1266,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1269,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: updatedMusicEvent.eventDate,\n                  onChange: e => setUpdatedMusicEvent(prev => ({\n                    ...prev,\n                    eventDate: e.target.value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1269,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1268,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Artist: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1272,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: updatedMusicEvent.eventArtist,\n                  onChange: e => setUpdatedMusicEvent(prev => ({\n                    ...prev,\n                    eventArtist: e.target.value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1272,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Time: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1275,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: updatedMusicEvent.eventTime,\n                  onChange: e => setUpdatedMusicEvent(prev => ({\n                    ...prev,\n                    eventTime: e.target.value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1275,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Concert ID: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1278,\n                  columnNumber: 42\n                }, this), selectedMusicEvent[\"Concert ID\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1267,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1281,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addtomusicschedulebuttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"addtomusicschedulecancelbtn\",\n                onClick: () => {\n                  setEditMusicEvent(false);\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1283,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"addtomusicschedulesubmitbtn\",\n                onClick: () => {\n                  setEditMusicEvent(false);\n                  setViewMusicEvent(false);\n                  const fullUpdate = {\n                    ...updatedMusicEvent,\n                    concertID: selectedMusicEvent[\"Concert ID\"]\n                  };\n                  updateMusicScheduleEvent(fullUpdate); //Send Updated Event to backend\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1288,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1282,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), addToMusicSchedule && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addtomusicscheduleoverlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addtomusicschedulecontent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Create an Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1309,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1310,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1311,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1313,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: eventDate,\n                onChange: e => setEventDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1313,\n                columnNumber: 60\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1315,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Artist: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1316,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: eventArtist,\n                onChange: e => setEventArtist(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1316,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1318,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1319,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: eventTime,\n                onChange: e => setEventTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1319,\n                columnNumber: 60\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1321,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1322,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addtomusicschedulebuttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"addtomusicschedulecancelbtn\",\n                  onClick: () => {\n                    setAddToMusicSchedule(false);\n                    setEventDate();\n                    setEventArtist();\n                    setEventTime();\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1325,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"addtomusicschedulesubmitbtn\",\n                  onClick: () => {\n                    setAddToMusicSchedule(false);\n                    sendMusicScheduleAdd();\n                  },\n                  children: \"Add to Schedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1333,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1324,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1308,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)]\n    }, void 0, true);\n  };\n  _s3(ChangeMusicSchedule, \"e61FC/tXBXsNevMQbDV7NJjlqw0=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1355,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1356,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1358,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1359,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookingsmanager\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1361,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayMonth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1362,\n        columnNumber: 13\n      }, this), showReservationCalendar && calendarReservation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservationcalendaroverlay\",\n        onClick: () => setShowReservationCalendar(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservationmodalcontentcalendar\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Reservation Calendar For:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 25\n            }, this), calendarReservation[\"Name\"], \" (Room \", calendarReservation[\"Room Number\"], \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ReservationCalendarModal, {\n            reservation: calendarReservation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"closemodalbtn\",\n            onClick: () => setShowReservationCalendar(false),\n            children: \"Close Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1364,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1360,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1381,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1382,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChangeRoomPrices, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChangeMusicSchedule, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1386,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s4(ManageBookings, \"1rQrMh+nysvhnHWU27T5BAbImGs=\");\n_c = ManageBookings;\nexport default ManageBookings;\nvar _c;\n$RefreshReg$(_c, \"ManageBookings\");","map":{"version":3,"names":["Navbar","CustomFooter","useState","useEffect","useContext","use","DataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ManageBookings","_s4","_s","$RefreshSig$","_s2","_s3","savedScroll","setSavedScroll","today","Date","selectedYear","setSelectedYear","getFullYear","selectedMonth","setSelectedMonth","getMonth","reservationData","setReservationData","selectedReservation","setSelectedReservation","editReservation","setEditReservation","editedReservation","setEditedReservation","dormitoryPrice","setDormitoryPrice","doubleSharedPrice","setDoubleSharedPrice","doublePrivatePrice","setDoublePrivatePrice","japaneseTwinPrice","setJapaneseTwinPrice","fourBedPrice","setFourBedPrice","musicSchedule","setMusicSchedule","roomTypeOptionsArray","dormitoryRooms","doubleSharedRooms","doubleRoomPrivate","japaneseTwinRooms","fourbedRooms","getDaysInMonth","month","year","getDate","parseLocalDate","dateStr","day","split","map","Number","months","selectedDay","setSelectedDay","showDayModal","setShowDayModal","dayReservations","setDayReservations","getReservationsForDate","filter","res","start","end","d","handleDayClick","reservations","handleReservationClick","reservation","totalRooms","length","DisplayMonth","daysInMonth","firstDay","getDay","rows","cells","i","push","fileName","_jsxFileName","lineNumber","columnNumber","dateObj","yyyy","mm","String","padStart","dd","reservationsForDay","numReservations","uniqueRooms","Set","r","isHotelFull","size","className","style","position","cursor","background","undefined","onClick","children","color","fontWeight","value","onChange","e","target","m","idx","type","stopPropagation","marginBottom","getReservationData","response","fetch","method","headers","credentials","data","json","ok","console","log","error","message","getRoomPrice","roomOption","getNights","startDate","endDate","diffTime","getTime","diffDays","Math","ceil","max","getEditTotal","nights","price","toFixed","deleteReservation","body","JSON","stringify","reservationId","alert","showReservationCalendar","setShowReservationCalendar","calendarReservation","setCalendarReservation","showOnCalendar","getDatesBetween","arr","sy","sm","sd","ey","em","ed","dt","endDt","setDate","getRoomArray","newStartIndex","setNewStartIndex","newEndIndex","setNewEndIndex","startIndex","setStartIndex","endIndex","setEndIndex","incrementReservationDisplay","decrementReservationDisplay","ReservationsTable","slice","onSubmit","preventDefault","roomNumber","otherReservations","optionReservations","getDateRange","toISOString","hasOverlap","some","roomArray","dateRoomMap","dates","add","isFullyBooked","date","shiftDate","offset","isFirstDayOfFullyBookedRange","isLastDayOfFullyBookedRange","fullRange","middleRange","startIsValid","endIsValid","middleIsValid","updatedReservation","err","prev","required","newStart","currentEnd","newEnd","currentStart","newRoomOption","defaultRoom","opt","roomType","min","newValue","checkOutValue","checkInValue","Object","entries","key","toString","userConfirm","window","confirm","ReservationCalendarModal","calendarYear","setCalendarYear","calendarMonth","setCalendarMonth","reservationDates","isReserved","has","textAlign","top","left","transform","fontSize","editRoomPrices","setEditRoomPrices","ChangeRoomPrices","localPrices","setLocalPrices","dormitory","doubleShared","doublePrivate","japaneseTwin","fourBed","scrollTo","handleInputChange","handleConfirm","scrollY","editMusicSchedule","setEditMusicSchedule","addToMusicSchedule","setAddToMusicSchedule","editMusicEvent","setEditMusicEvent","viewMusicEvent","setViewMusicEvent","selectedMusicEvent","setSelectedMusicEvent","fetchMusicScheduleData","ChangeMusicSchedule","eventDate","setEventDate","eventArtist","setEventArtist","eventTime","setEventTime","concertID","setConcertID","sendMusicScheduleAdd","payload","request","updatedMusicEvent","setUpdatedMusicEvent","updateMusicScheduleEvent","fullevent","deleteMusicEvent","fullUpdate","_c","$RefreshReg$"],"sources":["C:/Users/kevin/OneDrive/Documents/Visual Studio Code/.vscode/Real Estate App/realestateapp-main/realestateappfrontend/realestateapp/src/ManageBooking.js"],"sourcesContent":["import './ManageBooking.css';\nimport Navbar from './Custom_Navbar';\nimport CustomFooter from './Custom_Footer';\nimport { useState, useEffect, useContext, use } from 'react';\nimport { DataContext } from './DataProvider';\n\nconst ManageBookings = () => {\n\n    const [savedScroll, setSavedScroll] = useState(0);\n    const today = new Date();\n    const [selectedYear, setSelectedYear] = useState(today.getFullYear());\n    const [selectedMonth, setSelectedMonth] = useState(today.getMonth());\n    const [ reservationData, setReservationData ] = useState([]);\n    const [selectedReservation, setSelectedReservation] = useState(null);\n    const [ editReservation, setEditReservation ] = useState(false);\n    const [editedReservation, setEditedReservation] = useState({});\n    const { dormitoryPrice, setDormitoryPrice, doubleSharedPrice, setDoubleSharedPrice, doublePrivatePrice, setDoublePrivatePrice, japaneseTwinPrice, setJapaneseTwinPrice, fourBedPrice, setFourBedPrice, musicSchedule, setMusicSchedule } = useContext(DataContext);\n\n    //Room Option Variables\n    const roomTypeOptionsArray = ['Dormitory', 'Double Room Shared Toilet & Shower', 'Double Room Private Toilet & Bath', 'Japanese Twin Room', '4 Bed Room']\n    const dormitoryRooms = ['202A', '202B', '202C', '202D', '202E', '202F', '202G', '202H', '202I', '202K', '202L', '203A', '203B', '203C', '203D', '203E', '203F', '203G', '203H', '203I', '203K', '203L', '204A', '204B', '204C', '204D', '204E', '204F', '204G', '204H', '204I', '204K', '204L'];\n    const doubleSharedRooms = ['201', '205'];\n    const doubleRoomPrivate = ['206', '207'];\n    const japaneseTwinRooms = ['301', '302', '303', '304', '305', '306', '307'];\n    const fourbedRooms = ['401', '402', '403', '404', '405', '406'];\n\n\n\n    //Calendar Generation Helper\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    };\n\n    // Helper: Parse MySQL DATE string as local date (not UTC)\n    function parseLocalDate(dateStr) {\n        const [year, month, day] = dateStr.split('-').map(Number);\n    return new Date(year, month - 1, day);\n}\n\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const [selectedDay, setSelectedDay] = useState(null); // e.g. '2025-06-12'\n    const [showDayModal, setShowDayModal] = useState(false);\n    const [dayReservations, setDayReservations] = useState([]);\n\n    const getReservationsForDate = (dateStr) => {\n        return reservationData.filter(res => {\n            const start = parseLocalDate(res[\"Start Date\"]);\n            const end = parseLocalDate(res[\"End Date\"]);\n            const d = parseLocalDate(dateStr);\n            return d >= start && d <= end;\n        });\n    };\n\n    //Handler for clicking a day\n    const handleDayClick = (dateStr) => {\n        const reservations = getReservationsForDate(dateStr);\n        setDayReservations(reservations);\n        setSelectedDay(dateStr);\n        setShowDayModal(true);\n    };\n\n    //Handler for selecting a reservation within the day\n    const handleReservationClick = (reservation) => {\n        setSelectedReservation(reservation);\n        setEditReservation(false);\n        setShowDayModal(false);\n    };\n\n    //Calculate Total rooms in building\n    const totalRooms = dormitoryRooms.length + doubleSharedRooms.length + doubleRoomPrivate.length + japaneseTwinRooms.length + fourbedRooms.length;\n\n    const DisplayMonth = () => {\n        const daysInMonth = getDaysInMonth(selectedMonth, selectedYear);\n        const firstDay = new Date(selectedYear, selectedMonth, 1).getDay();\n\n        const rows = [];\n        let cells = [];\n\n        for (let i = 0; i < firstDay; i++) {\n            cells.push(<td key={`empty-${i}`}></td>);\n        }\n\n        for (let day = 1; day <= daysInMonth; day++) {\n            const dateObj = new Date(selectedYear, selectedMonth, day);\n            const yyyy = dateObj.getFullYear();\n            const mm = String(dateObj.getMonth() + 1).padStart(2, '0');\n            const dd = String(dateObj.getDate()).padStart(2, '0');\n            const dateStr = `${yyyy}-${mm}-${dd}`;\n            const reservationsForDay = getReservationsForDate(dateStr);\n            const numReservations = reservationsForDay.length;\n            const uniqueRooms = new Set(reservationsForDay.map(r => r[\"Room Number\"]));\n            const isHotelFull = uniqueRooms.size >= totalRooms;\n\n            cells.push(\n                <td\n                    key={`${selectedYear}-${selectedMonth}-${day}`}\n                    className={isHotelFull ? \"hotel-full\" : \"\"}\n                    style={{ position: \"relative\", cursor: \"pointer\", background: isHotelFull ? \"#ffcccc\" : undefined }}\n                    onClick={() => handleDayClick(dateStr)}\n                >\n                    <div className=\"calendardaynumber\">{day}</div>\n                    {isHotelFull ? (\n                        <div style={{ color: \"red\", fontWeight: \"bold\" }}>Hotel Full</div>\n                    ) : (\n                        <div className=\"reservationtotal\">{numReservations} Reservation{numReservations !== 1 ? \"s\" : \"\"}</div>\n                    )}\n                </td>\n            );\n            if ((cells.length) % 7 === 0) {\n                rows.push(<tr key={`row-${day}`}>{cells}</tr>);\n                cells = [];\n            }\n        }\n\n        if (cells.length) {\n            while (cells.length < 7) {\n                cells.push(<td key={`empty-end-${cells.length}`}></td>);\n            }\n            rows.push(<tr key=\"row-last\">{cells}</tr>);\n        }\n\n        return (\n            <>\n                <div className=\"bookingmanagercalendarbody\">\n                    <div className=\"calendarcontrols\">\n                        <select\n                            value={selectedMonth}\n                            onChange={e => {\n                            setSelectedMonth(Number(e.target.value));\n                            }}\n                        >\n                        {months.map((m, idx) => (\n                        <option key={m} value={idx}>{m}</option>\n                        ))}\n                    </select>\n                    <input\n                        className=\"yearselection\"\n                        type=\"number\"\n                        value={selectedYear}\n                        onChange={e => {\n                        setSelectedYear(Number(e.target.value));\n                        }}\n                    />\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    </div>\n                    <div className=\"calendartablewrapper\">\n                        <table className=\"calendartable\">\n                            <thead>\n                                <tr>\n                                    <th>Su</th><th>Mo</th><th>Tu</th><th>We</th><th>Th</th><th>Fr</th><th>Sa</th>\n                                </tr>\n                            </thead>\n                            <tbody>{rows}</tbody>\n                        </table>\n                    </div>\n                </div>\n                {/* Day Modal */}\n                {showDayModal && (\n                    <div className=\"reservationmodaloverlay\" onClick={() => setShowDayModal(false)}>\n                        <div className=\"reservationmodalcontentcalendar\" onClick={e => e.stopPropagation()}>\n                            <h3>Reservations for {selectedDay}</h3>\n                            <br/>\n\n                            {dayReservations.length === 0 ? (\n                                <>\n                                <div>No reservations for this day.</div>\n                                <br/>\n                                </>\n                            ) : (\n                                <ul>\n                                    {dayReservations.map(res => (\n                                        <>\n                                        <li key={res[\"Reservation ID\"]} style={{ marginBottom: \"10px\", cursor: \"pointer\" }} onClick={() => handleReservationClick(res)}>\n                                            <strong>{res[\"Name\"]}: </strong> Room {res[\"Room Number\"]}, {res[\"Room Option\"]}, Check In: {res[\"Check In\"]}, Check Out: {res[\"Check Out\"]}\n                                        </li>\n                                        <br/>\n                                        </>\n                                    ))}\n                                </ul>\n                            )}\n                            <button className=\"closemodalbtn\" onClick={() => setShowDayModal(false)}>Close</button>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    };\n\n    //Get Reservation Data Function\n    const getReservationData = async () => {\n\n\n        //GET request\n        try {\n            const response = await fetch('http://localhost:5000/reservationdata',\n                {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                credentials: 'include', //This allows cookies to be sent and received\n                }\n            );\n\n\n            const data = await response.json();\n\n            //Valid response check\n            if (response.ok) {\n                setReservationData(data.data);\n                console.log('Reservations Received');\n            }\n        } catch (error) {\n            console.error(\"Error Retrieving Reservations:\", error.response ? error.response.data : error.message);\n        }\n    };\n\n    useEffect(() => {\n        getReservationData();\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Reservation Data: \", reservationData);\n    }, [reservationData]);\n\n    // Helper to get price per room type\n    const getRoomPrice = (roomOption) => {\n        switch(roomOption) {\n            case 'Dormitory': return dormitoryPrice;\n            case 'Double Room Shared Toilet & Shower': return doubleSharedPrice;\n            case 'Double Room Private Toilet & Bath': return doublePrivatePrice;\n            case 'Japanese Twin Room': return japaneseTwinPrice;\n            case '4 Bed Room': return fourBedPrice;\n            default: return 0;\n        }\n    };\n\n    // Helper to get number of nights (exclusive of end date)\n    const getNights = (startDate, endDate) => {\n        const start = new Date(startDate);\n        const end = new Date(endDate);\n        // Nights = difference in days (exclusive of end date)\n        const diffTime = end.getTime() - start.getTime();\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return Math.max(1, diffDays);\n    };\n\n    // Calculate total for the current edit form\n    const getEditTotal = () => {\n        const startDate = editedReservation[\"Start Date\"] || selectedReservation[\"Start Date\"];\n        const endDate = editedReservation[\"End Date\"] || selectedReservation[\"End Date\"];\n        const roomOption = editedReservation[\"Room Option\"] || selectedReservation[\"Room Option\"];\n        if (!startDate || !endDate || !roomOption) return 0;\n        const nights = getNights(startDate, endDate);\n        const price = getRoomPrice(roomOption);\n        return (nights * price).toFixed(2);\n    };\n\n    const deleteReservation = async (reservation) => {\n        try {\n            const response = await fetch('http://localhost:5000/reservationdelete', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ reservationId: reservation[\"Reservation ID\"] }),\n            credentials: 'include',\n            });\n\n            if (response.ok) {\n                getReservationData();\n                setSelectedReservation(null);\n                setEditReservation(false);\n                alert(\"Reservation Deleted!\")\n            } else {\n                alert('Failed to delete reservation.');\n            }\n        } catch (error) {\n            console.error(\"Error Deleting Reservation: \", error);\n        }\n    }\n\n    //Calendar for showing reservation date ranges\n\n    // State for reservation calendar modal\n    const [showReservationCalendar, setShowReservationCalendar] = useState(false);\n    const [calendarReservation, setCalendarReservation] = useState(null);\n\n    const showOnCalendar = (reservation) => {\n        setCalendarReservation(reservation);\n        setShowReservationCalendar(true);\n    };\n\n    // Helper: get all dates between two dates (inclusive)\n    function getDatesBetween(start, end) {\n        const arr = [];\n        // Parse start and end as year, month, day (local)\n        const [sy, sm, sd] = start.split('-').map(Number);\n        const [ey, em, ed] = end.split('-').map(Number);\n        let dt = new Date(sy, sm - 1, sd);\n        const endDt = new Date(ey, em - 1, ed);\n        while (dt <= endDt) {\n            const yyyy = dt.getFullYear();\n            const mm = String(dt.getMonth() + 1).padStart(2, '0');\n            const dd = String(dt.getDate()).padStart(2, '0');\n            arr.push(`${yyyy}-${mm}-${dd}`);\n            dt.setDate(dt.getDate() + 1);\n        }\n        return arr;\n    }\n\n\n    const getRoomArray = (roomOption) => {\n        switch (roomOption) {\n            case \"Dormitory\":\n            return dormitoryRooms;\n            case \"Double Room Shared Toilet & Shower\":\n            return doubleSharedRooms;\n            case \"Double Room Private Toilet & Bath\":\n            return doubleRoomPrivate;\n            case \"Japanese Twin Room\":\n            return japaneseTwinRooms;\n            case \"4 Bed Room\":\n            return fourbedRooms;\n            default:\n            return [];\n        }\n        };\n\n\n    //Reservation Table Handling\n\n    const [ newStartIndex, setNewStartIndex ] = useState(0);\n    const [ newEndIndex, setNewEndIndex ] = useState(0);\n    const [ startIndex, setStartIndex ] = useState(0);\n    const [ endIndex, setEndIndex ] = useState(15);\n\n    useEffect(()=> {\n        console.log(\"Display Indices: \", startIndex, endIndex);\n\n    }, [startIndex, endIndex])\n\n    const incrementReservationDisplay = () => {\n\n        if (endIndex >= reservationData.length) {\n            alert(\"No Future Reservations.\")\n        } else {\n            setStartIndex(startIndex + 15);\n            setEndIndex(endIndex + 15);\n        }\n         \n\n    }\n\n     const decrementReservationDisplay = () => {\n\n        if (startIndex == 0) {\n            alert(\"No Previous Reservations.\")\n        \n        } else {\n             setStartIndex(startIndex - 15);\n        setEndIndex(endIndex - 15);\n\n        }\n         \n\n    }\n\n    const ReservationsTable = () => (\n        <div className=\"reservationstablewrapper\">\n            <h2>Reservations</h2>\n            <br />\n            <br />\n            <div className='searchforreservation'>\n                <input type='text'> Search for Reservation by Name.</input>\n            </div>\n            <table>\n            <thead>\n                <tr>\n                <th>Name</th>\n                <th>Start Date</th>\n                <th>End Date</th>\n                <th>Room Number</th>\n                <th>Room Option</th>\n                <th>People</th>\n                <th>Total</th>\n                <th>Reservation ID</th>\n                <th>Check In</th>\n                <th>Check Out</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                reservationData.slice(startIndex, endIndex).map((res, idx) => (  \n                \n                            <tr\n                                key={idx}\n                                onClick={() => { setSelectedReservation(res); setEditReservation(false); }}\n                                className=\"reservationrow\"\n                            >\n                                <td>{res[\"Name\"]}</td>\n                                <td>{res[\"Start Date\"]}</td>\n                                <td>{res[\"End Date\"]}</td>\n                                <td>{res[\"Room Number\"]}</td>\n                                <td>{res[\"Room Option\"]}</td>\n                                <td>{res[\"People\"]}</td>\n                                <td>{res[\"Total\"]}</td>\n                                <td>{res[\"Reservation ID\"]}</td>\n                                <td>{res[\"Check In\"]}</td>\n                                <td>{res[\"Check Out\"]}</td>\n                            </tr>\n                ))}\n            </tbody>\n            </table>\n            {/* Modal logic */}\n            {selectedReservation && (\n            <div\n                className=\"reservationmodaloverlay\"\n                onClick={() => { setSelectedReservation(null); setEditReservation(false); }}\n            >\n                <div className=\"reservationmodalcontent\" onClick={e => e.stopPropagation()}>\n                <h3>Reservation Details</h3>\n                <br />\n                {editReservation ? (\n                   <form\n                        onSubmit={async (e) => {\n                            e.preventDefault();\n\n                            const startDate = (editedReservation[\"Start Date\"] || selectedReservation[\"Start Date\"]).slice(0, 10);\n                            const endDate = (editedReservation[\"End Date\"] || selectedReservation[\"End Date\"]).slice(0, 10);\n                            const roomOption = editedReservation[\"Room Option\"] || selectedReservation[\"Room Option\"];\n                            const roomNumber = editedReservation[\"Room Number\"] || selectedReservation[\"Room Number\"];\n                            const reservationId = selectedReservation[\"Reservation ID\"];\n\n                            const otherReservations = reservationData.filter(\n                            r =>\n                                r[\"Room Option\"] === roomOption &&\n                                r[\"Room Number\"] === roomNumber &&\n                                r[\"Reservation ID\"] !== reservationId\n                            );\n\n                            const optionReservations = reservationData.filter(\n                            r =>\n                                r[\"Room Option\"] === roomOption &&\n                                r[\"Reservation ID\"] !== reservationId\n                            );\n\n                            const getDateRange = (start, end) => {\n                            const arr = [];\n                            let dt = new Date(start);\n                            const endDt = new Date(end);\n                            while (dt < endDt) {\n                                arr.push(dt.toISOString().slice(0, 10));\n                                dt.setDate(dt.getDate() + 1);\n                            }\n                            return arr;\n                            };\n\n                            const hasOverlap = otherReservations.some(r =>\n                            !(endDate <= r[\"Start Date\"] || startDate >= r[\"End Date\"])\n                            );\n                            if (hasOverlap) {\n                            alert(\"This room is already booked for the selected dates.\");\n                            return;\n                            }\n\n                            const roomArray = getRoomArray(roomOption);\n\n                            const dateRoomMap = {};\n                            for (const r of optionReservations) {\n                            const dates = getDateRange(r[\"Start Date\"], r[\"End Date\"]);\n                            for (const d of dates) {\n                                if (!dateRoomMap[d]) dateRoomMap[d] = new Set();\n                                dateRoomMap[d].add(r[\"Room Number\"]);\n                            }\n                            }\n\n                            const isFullyBooked = (date) =>\n                            dateRoomMap[date] && dateRoomMap[date].size >= roomArray.length;\n\n                            const shiftDate = (dateStr, offset) => {\n                            const d = new Date(dateStr);\n                            d.setDate(d.getDate() + offset);\n                            return d.toISOString().slice(0, 10);\n                            };\n\n                            const isFirstDayOfFullyBookedRange = (date) =>\n                            isFullyBooked(date) && !isFullyBooked(shiftDate(date, -1));\n\n                            const isLastDayOfFullyBookedRange = (date) =>\n                            isFullyBooked(date) && !isFullyBooked(shiftDate(date, 1));\n\n                            const fullRange = getDateRange(startDate, endDate);\n                            const middleRange = fullRange.slice(1, -1);\n\n                            const startIsValid = !isFullyBooked(startDate) || isLastDayOfFullyBookedRange(startDate);\n                            const endIsValid = !isFullyBooked(endDate) || isFirstDayOfFullyBookedRange(endDate);\n                            const middleIsValid = !middleRange.some(isFullyBooked);\n\n                            if (!startIsValid) {\n                            alert(\"Start date cannot land on a fully booked day unless it's the LAST day of that range.\");\n                            return;\n                            }\n                            if (!endIsValid) {\n                            alert(\"End date cannot land on a fully booked day unless it's the FIRST day of that range.\");\n                            return;\n                            }\n                            if (!middleIsValid) {\n                            alert(\"Cannot include fully booked days in the middle of the range.\");\n                            return;\n                            }\n\n                            // Submit\n                            const updatedReservation = { ...selectedReservation, ...editedReservation };\n                            try {\n                            const response = await fetch('http://localhost:5000/reservationdataupdate', {\n                                method: 'POST',\n                                headers: { 'Content-Type': 'application/json' },\n                                body: JSON.stringify(updatedReservation),\n                                credentials: 'include',\n                            });\n                            if (response.ok) {\n                                getReservationData();\n                                setSelectedReservation(updatedReservation);\n                                setEditReservation(false);\n                            } else {\n                                alert(\"Reservation update failed.\");\n                            }\n                            } catch (err) {\n                            console.error(\"Failed to update reservation:\", err);\n                            alert(\"An error occurred while updating.\");\n                            }\n                        }}\n                        >\n\n                        <ul>\n                            {/* Name */}\n                            <li>\n                            <strong>Name:</strong>\n                            <input\n                                type=\"text\"\n                                value={editedReservation[\"Name\"] !== undefined ? editedReservation[\"Name\"] : selectedReservation[\"Name\"]}\n                                onChange={e => setEditedReservation(prev => ({ ...prev, [\"Name\"]: e.target.value }))}\n                                required\n                            />\n                            </li>\n                            {/* Start Date */}\n                            <li>\n                            <strong>Start Date:</strong>\n                            <input\n                                type=\"date\"\n                                value={editedReservation[\"Start Date\"] !== undefined ? editedReservation[\"Start Date\"] : selectedReservation[\"Start Date\"]}\n                                onChange={(e) => {\n\n                                    const newStart = e.target.value;\n                                    const currentEnd = editedReservation[\"End Date\"] !== undefined ? editedReservation[\"End Date\"] : selectedReservation[\"End Date\"];\n\n                                    if(newStart >= currentEnd) {\n                                        alert(\"Start Date Cannot be On or After End Date.\")\n                                        return;\n                                    } \n                                    \n                                    setEditedReservation(prev => ({ ...prev, [\"Start Date\"]: e.target.value \n                                    \n\n                                }))}}\n                                required\n                            />\n                            </li>\n                            {/* End Date */}\n                            <li>\n                            <strong>End Date:</strong>\n                            <input\n                                type=\"date\"\n                                value={editedReservation[\"End Date\"] !== undefined ? editedReservation[\"End Date\"] : selectedReservation[\"End Date\"]}\n                                onChange={(e) => {\n\n                                    const newEnd = e.target.value;               \n                                    const currentStart = editedReservation[\"Start Date\"] !== undefined ? editedReservation[\"Start Date\"] : selectedReservation[\"Start Date\"]\n                                    \n                                    if (newEnd <= currentStart) {\n                                    alert(\"End Date Cannot Be On or Before Start Date.\");\n                                    return;\n\n                                    } setEditedReservation(prev => ({ ...prev, [\"End Date\"]: e.target.value\n\n                                }))}}\n                                required\n                            />\n                            </li>\n                            {/* Room Option */}\n                            <li>\n                            <strong>Room Option:</strong>\n                            <select\n                                value={editedReservation[\"Room Option\"] !== undefined ? editedReservation[\"Room Option\"] : selectedReservation[\"Room Option\"]}\n                                onChange={e => {\n                                    const newRoomOption = e.target.value;\n                                    let defaultRoom = \"\";\n                                    if (newRoomOption === 'Dormitory') defaultRoom = dormitoryRooms[0];\n                                    else if (newRoomOption === 'Double Room Shared Toilet & Shower') defaultRoom = doubleSharedRooms[0];\n                                    else if (newRoomOption === 'Double Room Private Toilet & Bath') defaultRoom = doubleRoomPrivate[0];\n                                    else if (newRoomOption === 'Japanese Twin Room') defaultRoom = japaneseTwinRooms[0];\n                                    else if (newRoomOption === '4 Bed Room') defaultRoom = fourbedRooms[0];\n                                    setEditedReservation(prev => ({\n                                    ...prev,\n                                    [\"Room Option\"]: newRoomOption,\n                                    [\"Room Number\"]: defaultRoom // set default room number\n                                    }));\n                                }}\n                                required\n                                >\n                                {roomTypeOptionsArray.map(opt => (\n                                    <option key={opt} value={opt}>{opt}</option>\n                                ))}\n                                </select>\n                            </li>\n                            {/* Room Number */}\n                            <li>\n                            <strong>Room Number:</strong>\n                            <select\n                                value={editedReservation[\"Room Number\"] !== undefined ? editedReservation[\"Room Number\"] : selectedReservation[\"Room Number\"]}\n                                onChange={e => setEditedReservation(prev => ({ ...prev, [\"Room Number\"]: e.target.value }))}\n                                required\n                            >\n                                {(() => {\n                                const roomType = editedReservation[\"Room Option\"] !== undefined ? editedReservation[\"Room Option\"] : selectedReservation[\"Room Option\"];\n                                if (roomType === 'Dormitory') return dormitoryRooms.map(r => <option key={r} value={r}>{r}</option>);\n                                if (roomType === 'Double Room Shared Toilet & Shower') return doubleSharedRooms.map(r => <option key={r} value={r}>{r}</option>);\n                                if (roomType === 'Double Room Private Toilet & Bath') return doubleRoomPrivate.map(r => <option key={r} value={r}>{r}</option>);\n                                if (roomType === 'Japanese Twin Room') return japaneseTwinRooms.map(r => <option key={r} value={r}>{r}</option>);\n                                if (roomType === '4 Bed Room') return fourbedRooms.map(r => <option key={r} value={r}>{r}</option>);\n                                return null;\n                                })()}\n                            </select>\n                            </li>\n                            {/* People */}\n                            <li>\n                            <strong>People:</strong>\n                            <input\n                                type=\"number\"\n                                min={1}\n                                value={editedReservation[\"People\"] !== undefined ? editedReservation[\"People\"] : selectedReservation[\"People\"]}\n                                onChange={e => setEditedReservation(prev => ({ ...prev, [\"People\"]: e.target.value }))}\n                                required\n                            />\n                            </li>\n                            {/* Total */}\n                            <li>\n                                <strong>Total:</strong> ¥{getEditTotal()}\n                            </li>\n                            {/* Reservation ID (read-only) */}\n                            <li>\n                            <strong>Reservation ID: </strong>\n                                {selectedReservation[\"Reservation ID\"]}\n                            </li>\n                            {/* Check In */}\n                            <li>\n                            <strong>Check In:</strong>\n                                <select\n                                    value={editedReservation[\"Check In\"] !== undefined ? editedReservation[\"Check In\"] : selectedReservation[\"Check In\"] || \"Yes\"}\n                                    onChange={e => {\n                                        const newValue = e.target.value;\n                                        const checkOutValue = editedReservation[\"Check Out\"] !== undefined ? editedReservation[\"Check Out\"] : selectedReservation[\"Check Out\"];\n                                        if (checkOutValue === \"Yes\" && newValue === \"No\") {\n                                            alert(\"Cannot select 'No' for Check In when Check Out is 'Yes'.\");\n                                            return;\n                                        }\n                                        setEditedReservation(prev => ({ ...prev, [\"Check In\"]: newValue }));\n                                    }}\n                                    required\n                                >\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </li>\n                            {/* Check Out */}\n                            <li>\n                                <strong>Check Out:</strong>\n                                <select\n                                    value={editedReservation[\"Check Out\"] !== undefined ? editedReservation[\"Check Out\"] : selectedReservation[\"Check Out\"] || \"yes\"}\n                                    onChange={e => {\n                                    const newValue = e.target.value;\n                                    const checkInValue = editedReservation[\"Check In\"] !== undefined ? editedReservation[\"Check In\"] : selectedReservation[\"Check In\"];\n                                    if (checkInValue === \"No\" && newValue === \"Yes\") {\n                                        alert(\"Cannot select 'Yes' for Check Out when Check In is 'No'.\");\n                                        return;\n                                    }\n                                    setEditedReservation(prev => ({ ...prev, [\"Check Out\"]: newValue }));\n                                    }}\n                                    required\n                                >\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </li>\n                        </ul>\n                        <br />\n                        <div className=\"reservationdetailsbuttons\">\n                            <button type=\"button\" className=\"closemodalbtn\" onClick={() => setEditReservation(false)}>\n                            Cancel\n                            </button>\n                            <button type=\"submit\" className=\"editreservationbtn\">\n                            Save\n                            </button>\n                        </div>\n                    </form>\n                ) : (\n                    <>\n                    <ul>\n                        {Object.entries(selectedReservation).map(([key, value]) => (\n                        <li key={key}>\n                            <strong>{key}:</strong> {value?.toString()}\n                        </li>\n                        ))}\n                    </ul>\n                    <br />\n                    <div className=\"reservationdetailsbuttons\">\n                        <button className=\"closemodalbtn\" onClick={() => setSelectedReservation(null)}>\n                        Close Reservation\n                        </button>\n                        <button className=\"editreservationbtn\" onClick={() => {\n                        setEditReservation(true);\n                        setEditedReservation(selectedReservation);\n                        }}>\n                        Edit Reservation\n                        </button>\n                        <button className=\"deletereservationbtn\" onClick={() => {\n                            \n                                const userConfirm = window.confirm(\"Are you Sure You want to Delete this Reservation?\"); \n                                \n                                if (userConfirm) {\n                                    deleteReservation(selectedReservation)\n                                }\n                                \n                                }}>\n                        Delete Reservation\n                        </button>\n                        <button\n                            className=\"showoncalendarbtn\"\n                            onClick={() => showOnCalendar(selectedReservation)}\n                            >\n                            Show On Calendar\n                        </button>\n                    </div>\n                    </>\n                )}\n                </div>\n            </div>\n            )}\n            <div className='reservationtablenavigationbuttons'>\n                <button className='reservationtablepreviousbtn' onClick={() => {\n                    decrementReservationDisplay();\n                }}>Previous Page</button>\n                <button className='reservationtablenextbtn' onClick={() => {\n                    incrementReservationDisplay();\n                    }}>Next Page</button>\n            </div>\n        </div>\n        \n    );\n\n    const ReservationCalendarModal = ({ reservation }) => {\n\n        const [calendarYear, setCalendarYear] = useState(new Date().getFullYear());\n        const [calendarMonth, setCalendarMonth] = useState(new Date().getMonth());\n\n        useEffect(() => {\n            if (reservation) {\n                setCalendarYear(new Date(reservation[\"Start Date\"]).getFullYear());\n                setCalendarMonth(new Date(reservation[\"Start Date\"]).getMonth());\n            }\n        }, [reservation]);\n\n\n        if (!reservation) return null;\n\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        // Get all dates the reservation occupies\n        const reservationDates = new Set(getDatesBetween(reservation[\"Start Date\"], reservation[\"End Date\"]));\n        const roomNumber = reservation[\"Room Number\"];\n\n        // Calendar rendering logic for selected month/year\n        const daysInMonth = getDaysInMonth(calendarMonth, calendarYear);\n        const firstDay = new Date(calendarYear, calendarMonth, 1).getDay();\n        const rows = [];\n        let cells = [];\n        for (let i = 0; i < firstDay; i++) {\n            cells.push(<td key={`empty-${i}`}></td>);\n        }\n        for (let day = 1; day <= daysInMonth; day++) {\n            const yyyy = calendarYear;\n            const mm = String(calendarMonth + 1).padStart(2, '0');\n            const dd = String(day).padStart(2, '0');\n            const dateStr = `${yyyy}-${mm}-${dd}`;\n            const isReserved = reservationDates.has(dateStr);\n            cells.push(\n                <td\n                    key={`${yyyy}-${calendarMonth}-${day}`}\n                    style={{\n                        background: isReserved ? \"#3ae13a\" : undefined,\n                        textAlign: \"center\",\n                        fontWeight: isReserved ? \"bold\" : undefined,\n                        color: isReserved ? \"red\" : undefined,\n                        position: \"relative\"\n                    }}\n                >\n                    <div className=\"calendardaynumber\">{day}</div>\n                    {isReserved && (\n                        <div style={{\n                            position: \"absolute\",\n                            top: \"50%\",\n                            left: \"50%\",\n                            transform: \"translate(-50%, -50%)\",\n                            fontSize: \"1.1em\"\n                        }}>\n                            {roomNumber}\n                        </div>\n                    )}\n                </td>\n            );\n            if ((cells.length) % 7 === 0) {\n                rows.push(<tr key={`row-${day}`}>{cells}</tr>);\n                cells = [];\n            }\n        }\n        if (cells.length) {\n            while (cells.length < 7) {\n                cells.push(<td key={`empty-end-${cells.length}`}></td>);\n            }\n            rows.push(<tr key=\"row-last\">{cells}</tr>);\n        }\n\n        return (\n\n            <>\n            <div className=\"calendarcontrols\">\n                    <select\n                        value={calendarMonth}\n                        onChange={e => setCalendarMonth(Number(e.target.value))}\n                    >\n                        {months.map((m, idx) => (\n                            <option key={m} value={idx}>{m}</option>\n                        ))}\n                    </select>\n                    <input\n                        className=\"yearselection\"\n                        type=\"number\"\n                        value={calendarYear}\n                        onChange={e => setCalendarYear(Number(e.target.value))}\n                    />\n            </div>\n            <br/>\n            <div className=\"calendartablewrapper\">\n                <table className=\"calendartable\">\n                    <thead>\n                        <tr>\n                            <th>Su</th><th>Mo</th><th>Tu</th><th>We</th><th>Th</th><th>Fr</th><th>Sa</th>\n                        </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                </table>\n            </div>\n        </>\n        );\n    };\n    const [ editRoomPrices, setEditRoomPrices ] = useState(false);\n\n    const ChangeRoomPrices = () => {\n        // Local state for editing prices\n        const [localPrices, setLocalPrices] = useState({\n            dormitory: dormitoryPrice,\n            doubleShared: doubleSharedPrice,\n            doublePrivate: doublePrivatePrice,\n            japaneseTwin: japaneseTwinPrice,\n            fourBed: fourBedPrice\n        });\n\n        // When entering edit mode, sync local state with context\n        useEffect(() => {\n            if (editRoomPrices) {\n                setLocalPrices({\n                    dormitory: dormitoryPrice,\n                    doubleShared: doubleSharedPrice,\n                    doublePrivate: doublePrivatePrice,\n                    japaneseTwin: japaneseTwinPrice,\n                    fourBed: fourBedPrice\n                });\n                window.scrollTo(0, savedScroll);\n            }\n        }, [editRoomPrices]);\n\n        // Handlers for input changes\n        const handleInputChange = (key, value) => {\n            setLocalPrices(prev => ({ ...prev, [key]: value }));\n        };\n\n        // Confirm and update context\n        const handleConfirm = () => {\n            setDormitoryPrice(localPrices.dormitory);\n            setDoubleSharedPrice(localPrices.doubleShared);\n            setDoublePrivatePrice(localPrices.doublePrivate);\n            setJapaneseTwinPrice(localPrices.japaneseTwin);\n            setFourBedPrice(localPrices.fourBed);\n            setEditRoomPrices(false);\n        };\n\n        return (\n            <>\n                {!editRoomPrices && (\n                    <div className=\"roompricewrapper\">\n                        <div className=\"roompricetitle\">\n                            <h2>Room Prices</h2>\n                        </div>\n                        <div className=\"roompriceslist\">\n                            <ul>\n                                <li>\n                                    <h3>Dormitory Price: </h3><p>¥{dormitoryPrice}</p>\n                                </li>\n                                <li>\n                                    <h3>Double Shared Room Price: </h3><p>¥{doubleSharedPrice}</p>\n                                </li>\n                                <li>\n                                    <h3>Double Private Room Price: </h3><p>¥{doublePrivatePrice}</p>\n                                </li>\n                                <li>\n                                    <h3>Japanese Twin Room Price: </h3><p>¥{japaneseTwinPrice}</p>\n                                </li>\n                                <li>\n                                    <h3>Four Bed Room Price: </h3><p>¥{fourBedPrice}</p>\n                                </li>\n                            </ul>\n                        </div>\n                        <br/>\n                        <br/>\n                        <button className=\"editroompricesbtn\" onClick={() => {\n                            setSavedScroll(window.scrollY);\n                            setEditRoomPrices(true);\n                        }}>Edit Room Prices</button>\n                    </div>\n                )}\n\n                {editRoomPrices && (\n                    <div className=\"roompricewrapper\">\n                        <div className=\"roompricetitle\">\n                            <h2>Room Prices</h2>\n                        </div>\n                        <div className=\"roompriceslist\">\n                            <ul>\n                                <li>\n                                    <h3>Dormitory Price: ¥</h3>\n                                     <input type=\"number\" value={localPrices.dormitory} onChange={e => handleInputChange('dormitory', e.target.value)} />\n                                </li>\n                                <li>\n                                    <h3>Double Shared Room Price: ¥</h3>\n                                    <input type=\"number\" value={localPrices.doubleShared} onChange={e => handleInputChange('doubleShared', e.target.value)} />\n                                </li>\n                                <li>\n                                    <h3>Double Private Room Price: ¥</h3>\n                                    <input type=\"number\" value={localPrices.doublePrivate} onChange={e => handleInputChange('doublePrivate', e.target.value)} />\n                                </li>\n                                <li>\n                                    <h3>Japanese Twin Room Price: ¥</h3>\n                                    <input type=\"number\" value={localPrices.japaneseTwin} onChange={e => handleInputChange('japaneseTwin', e.target.value)} />\n                                </li>\n                                <li>\n                                    <h3>Four Bed Room Price: ¥</h3>\n                                    <input type=\"number\" value={localPrices.fourBed} onChange={e => handleInputChange('fourBed', e.target.value)} />\n                                </li>\n                            </ul>\n                        </div>\n                        <br/>\n                        <br/>\n                        <button className=\"editroompricesbtn\" onClick={handleConfirm}>Confirm Room Prices</button>\n                    </div>\n                )}\n            </>\n        );\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const [ editMusicSchedule, setEditMusicSchedule ] = useState(false);\n    const [ addToMusicSchedule, setAddToMusicSchedule ] = useState(false);\n    const [ editMusicEvent, setEditMusicEvent ] = useState(false);\n    const [ viewMusicEvent ,setViewMusicEvent ] = useState(false);\n    const [ selectedMusicEvent, setSelectedMusicEvent ] = useState();\n    \n    \n    //Fetch Music Schedule data \n    const fetchMusicScheduleData = async () => {\n        \n\n        try {\n            const response = await fetch('http://localhost:5000/musicschedule', \n            \n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n\n                setMusicSchedule(data.data);\n                console.log(\"Music Schedule Data Received: \", musicSchedule);\n\n            }\n         \n        }\n        catch (error) {\n            console.error(\"Error obtaining music schedule data: \", error)\n        }\n    }\n\n    //Fetch Music Data on Mount\n    useEffect(() => {\n        fetchMusicScheduleData(); \n        console.log(\"Music Schedule Fetch Initiated.\")\n    }, []);\n\n    const ChangeMusicSchedule = () => {\n\n        const [ eventDate, setEventDate] = useState('');\n        const [ eventArtist, setEventArtist] = useState('');\n        const [ eventTime, setEventTime ] = useState('');\n        const [ concertID, setConcertID ] = useState();\n\n\n        const sendMusicScheduleAdd = async () => {\n\n            const payload = {\n                eventDate,\n                eventArtist,\n                eventTime\n            }\n\n            try {\n\n\n                const request = await fetch ('http://localhost:5000/musicscheduleadd',\n\n                    {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type' : 'application/json'     \n                        },\n                        credentials: 'include', \n                        body: JSON.stringify(payload)\n                    }\n\n                )\n\n                if (request.ok) {\n                    alert(\"Event added successfully!\");\n                    fetchMusicScheduleData();\n                    console.log('Music Event Request Successful');\n                } else {\n                    alert(\"Could Not Add Event!\");\n                    console.log(\"Event Could Not be Added.\")\n                }\n            } catch (error) {\n                console.error('Error Sending Music Event Data: ', error);\n            }\n        }\n\n        //Updated Music Event Variable\n\n        const [ updatedMusicEvent, setUpdatedMusicEvent ] = useState({\n            eventDate,\n            eventTime,\n            eventArtist,\n            concertID\n            \n        });\n\n        const updateMusicScheduleEvent = async (fullevent) => {\n\n            const { eventDate, eventArtist, eventTime, concertID } = fullevent\n\n            const payload = { eventDate, eventArtist, eventTime, concertID };\n\n            try {\n\n\n                const request = await fetch ('http://localhost:5000/musicscheduleupdate',\n\n                    {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type' : 'application/json'     \n                        },\n                        credentials: 'include', \n                        body: JSON.stringify(payload)\n                    }\n\n                )\n\n                if (request.ok) {\n                    alert(\"Event Updated successfully!\");\n                    fetchMusicScheduleData();\n                    console.log('Music Event Request Successful');\n                } else {\n                    alert(\"Could Not Update Event!\");\n                    console.log(\"Event Could Not be Added.\")\n                }\n            } catch (error) {\n                console.error('Error Sending Music Event Data: ', error);\n            }\n        }\n\n        const deleteMusicEvent = async (concertID) => {\n\n            const payload = { concertID }\n\n            try {\n\n                const request = await fetch('http://localhost:5000/musicscheduledelete', {\n\n                    method: 'POST',\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(payload) \n                })\n\n                if (request.ok) {\n                    console.log(\"Backend Deletion Request Processed.\")\n                    alert(\"Event Deleted.\");\n                    fetchMusicScheduleData();\n                }\n\n            } catch (error) {\n                console.error(\"Event Deletion Frontend Request Failed: \", error)\n            }\n        } \n\n\n        return (\n            <>\n                    <div className=\"musicschedulewrapper\">\n                        <div className=\"musicscheduletitle\">\n                            <h2>Music Schedule</h2>\n                        </div>\n                        <div className=\"musicscheduletable\">\n                            <table>\n                                <tr>\n                                    <th>\n                                        Date\n                                    </th>\n                                    <th>\n                                        Artist\n                                    </th>\n                                    <th>\n                                       Time\n                                    </th>\n                                    <th>\n                                        Concert ID\n                                    </th>\n                                </tr>\n                                   {musicSchedule.map((res, idx) => (\n                                    <tr\n                                        key={idx}\n                                        className='musicschedulerow'\n                                        onClick={() => {\n                                            setViewMusicEvent(true);\n                                            setSelectedMusicEvent(res);\n                                        }}\n\n                                    >\n                                    <td>\n                                        {res[\"Date\"]}\n                                    </td>\n                                    <td>\n                                        {res[\"Artist\"]}\n                                    </td>\n                                    <td>\n                                        {res[\"Time\"]}\n                                    </td>\n                                    <td>\n                                        {res[\"Concert ID\"]}\n                                    </td>\n                                    </tr>\n                                   ))}\n                            </table>\n                        </div>\n                        \n                        <div className='addtomusicschedulebtn'>\n                            <button onClick={() => {\n                                setAddToMusicSchedule(true)\n                                }}>Add to Music Schedule</button>\n                        </div>\n                        <br/>\n                        <br/>\n                    </div> \n                    {viewMusicEvent && !editMusicEvent && (\n                        <>\n                        <div className='viewmusiceventoverlay'>\n                            <div className='viewmusiceventcontent'>\n                                <h3>Event</h3>\n                                <br/>\n                                <ul>\n                                    <li>\n                                        <strong>Date: </strong>{selectedMusicEvent[\"Date\"]}\n                                    </li>\n                                    <li>\n                                        <strong>Artist: </strong>{selectedMusicEvent[\"Artist\"]}\n                                    </li>\n                                    <li>\n                                        <strong>Time: </strong>{selectedMusicEvent[\"Time\"]}\n                                    </li>\n                                    <li>\n                                         <strong>Concert ID: </strong>{selectedMusicEvent[\"Concert ID\"]}\n                                    </li>\n                                </ul>\n                                <br/>\n                                <div className='addtomusicschedulebuttons'>\n                                    <button className='addtomusicschedulecancelbtn'onClick={() => {\n                                        setViewMusicEvent(false);\n                                    }}>\n                                        Cancel\n                                    </button>\n                                    <button type ='submit' className='addtomusicschedulesubmitbtn' onClick={() => {\n                                        setEditMusicEvent(true);\n                                    }}>\n                                        Edit Event\n                                    </button>\n                                    <button className='addtomusicscheduledeletebtn' onClick={() => {\n                                        setViewMusicEvent(false);\n                                        deleteMusicEvent(selectedMusicEvent[\"Concert ID\"])\n                                    }}>\n                                        Delete Event\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        </>\n                    )}\n                    {viewMusicEvent && editMusicEvent && (\n                        <>\n                        <div className='viewmusiceventoverlay'>\n                            <div className='viewmusiceventcontent'>\n                                <h3>Event</h3>\n                                <br/>\n                                <ul>\n                                    <li>\n                                        <strong>Date: </strong><input type='date' value={updatedMusicEvent.eventDate} onChange={e => setUpdatedMusicEvent(prev => ({...prev, eventDate: e.target.value}))}></input>\n                                    </li>\n                                    <li>\n                                        <strong>Artist: </strong><input type='text' value={updatedMusicEvent.eventArtist} onChange={e => setUpdatedMusicEvent(prev => ({...prev, eventArtist: e.target.value}))}></input>\n                                    </li>\n                                    <li>\n                                        <strong>Time: </strong><input type='time' value={updatedMusicEvent.eventTime} onChange={e => setUpdatedMusicEvent(prev => ({...prev, eventTime: e.target.value}))}></input>\n                                    </li>\n                                    <li>\n                                         <strong>Concert ID: </strong>{selectedMusicEvent[\"Concert ID\"]}\n                                    </li>\n                                </ul>\n                                <br/>\n                                <div className='addtomusicschedulebuttons'>\n                                    <button className='addtomusicschedulecancelbtn'onClick={() => {\n                                        setEditMusicEvent(false);\n                                    }}>\n                                        Cancel\n                                    </button>\n                                    <button type ='submit' className='addtomusicschedulesubmitbtn' onClick={() => {\n                                        setEditMusicEvent(false);\n                                        setViewMusicEvent(false);\n\n                                        const fullUpdate = {\n                                            ...updatedMusicEvent, \n                                            concertID: selectedMusicEvent[\"Concert ID\"]\n                                        };\n                                        updateMusicScheduleEvent(fullUpdate); //Send Updated Event to backend\n                                    }}>\n                                        Submit\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        </>\n                    )}\n                    {addToMusicSchedule && (\n                        <>\n                        <div className='addtomusicscheduleoverlay'>\n                            <div className='addtomusicschedulecontent'>\n                                <h3>Create an Event</h3>\n                                <br/>\n                                <br/>\n                                <form>\n                                    <strong>Date: </strong><input type='date' value={eventDate} onChange={e => setEventDate(e.target.value)} >\n                                    </input>\n                                    <br/>\n                                    <strong>Artist: </strong><input type='text' value={eventArtist} onChange={e => setEventArtist(e.target.value)}>\n                                    </input>\n                                    <br/>\n                                    <strong>Time: </strong><input type='time' value={eventTime} onChange={e => setEventTime(e.target.value)}>\n                                    </input>\n                                    <br/>\n                                    <br/>\n                                    <br/>\n                                    <div className='addtomusicschedulebuttons'>\n                                        <button type ='submit' className='addtomusicschedulecancelbtn'onClick={() => {\n                                            setAddToMusicSchedule(false);\n                                            setEventDate();\n                                            setEventArtist();\n                                            setEventTime();\n                                        }}>\n                                            Cancel\n                                        </button>\n                                        <button type ='submit' className='addtomusicschedulesubmitbtn' onClick={() => {\n                                            setAddToMusicSchedule(false);\n                                            sendMusicScheduleAdd();\n                                        }}>\n                                            Add to Schedule\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        </>\n                    )\n\n                    }\n            </>\n        );\n    }\n\n\n\n    return (\n        <>\n        <Navbar/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <div className=\"bookingsmanager\">\n            <h2>Manage Bookings</h2>\n            <DisplayMonth/>\n            {showReservationCalendar && calendarReservation && (\n                <div className=\"reservationcalendaroverlay\" onClick={() => setShowReservationCalendar(false)}>\n                    <div className=\"reservationmodalcontentcalendar\" onClick={e => e.stopPropagation()}>\n                    <h3>\n                        Reservation Calendar For:\n                        <br/>\n                        {calendarReservation[\"Name\"]} (Room {calendarReservation[\"Room Number\"]})\n                    </h3>\n                    <br />\n                    <ReservationCalendarModal reservation={calendarReservation} />\n                    <br/>\n                    <button className=\"closemodalbtn\" onClick={() => setShowReservationCalendar(false)}>\n                        Close Calendar\n                    </button>\n                    </div>\n                </div>\n                )}\n            </div>\n        <ReservationsTable/>\n        <br/>\n        <ChangeRoomPrices/>\n        <br/>\n        <ChangeMusicSchedule/>\n        <CustomFooter/>\n        </>\n    )\n}\n\nexport default ManageBookings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}