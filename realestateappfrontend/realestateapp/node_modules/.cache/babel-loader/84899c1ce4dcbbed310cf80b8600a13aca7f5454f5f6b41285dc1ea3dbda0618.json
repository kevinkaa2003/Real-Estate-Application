{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\OneDrive\\\\Documents\\\\Visual Studio Code\\\\.vscode\\\\RealEstateApp\\\\realestateapp-main\\\\realestateappfrontend\\\\realestateapp\\\\src\\\\DataProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n//Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\n\n//Create Provider Element\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  useEffect(() => {\n    if (localStorage.getItem('userLoggedIn') === null) {\n      localStorage.setItem('userLoggedIn', 'false'); //Initialize userLoggedIn in local storage\n    }\n  }, []);\n\n  //userLoggedIn variable handling\n  const [userLoggedIn, setUserLoggedIn] = useState(() => {\n    return localStorage.getItem('userLoggedIn') === 'true';\n  });\n\n  //editProfile variable\n  const [editProfile, setEditProfile] = useState(false);\n\n  //State to store cart product IDs for use on Cart Page\n  const [cartProducts, setCartProducts] = useState([]);\n\n  //Function For Filtering Product Object Key Value Pairs\n  const getValues = (obj, keys) => {\n    return keys.map(key => obj[key]);\n  };\n\n  //Function for adding a product to the local storage 'cartProducts' variable\n  const addReservation = product => {\n    const stored = localStorage.getItem('cartProducts');\n    const existingCart = stored ? JSON.parse(stored) : [];\n    // Convert date fields to ISO strings before storing\n    const productToStore = {\n      ...product,\n      reservationStartDate: product.reservationStartDate instanceof Date ? product.reservationStartDate.toISOString() : product.reservationStartDate,\n      reservationEndDate: product.reservationEndDate instanceof Date ? product.reservationEndDate.toISOString() : product.reservationEndDate\n    };\n    existingCart.push(productToStore);\n    localStorage.setItem('cartProducts', JSON.stringify(existingCart));\n    setCartProducts(existingCart);\n    console.log(\"Cart Products: \", existingCart);\n  };\n  const removeReservation = reservationToRemove => {\n    const stored = localStorage.getItem('cartProducts');\n    const existingCart = stored ? JSON.parse(stored) : [];\n    const updatedCart = existingCart.filter(reservation => !(String(reservation.reservationStartDate) === String(reservationToRemove.reservationStartDate instanceof Date ? reservationToRemove.reservationStartDate.toISOString() : reservationToRemove.reservationStartDate) && String(reservation.reservationEndDate) === String(reservationToRemove.reservationEndDate instanceof Date ? reservationToRemove.reservationEndDate.toISOString() : reservationToRemove.reservationEndDate) && reservation.roomOption === reservationToRemove.roomOption && reservation.people === reservationToRemove.people));\n    localStorage.setItem('cartProducts', JSON.stringify(updatedCart));\n    setCartProducts(updatedCart);\n    console.log(\"Cart Products: \", updatedCart);\n  };\n\n  //set cartProducts to the local storage data for 'cartProducts' on page load\n  useEffect(() => {\n    const stored = localStorage.getItem('cartProducts');\n    const savedCart = stored ? JSON.parse(stored) : [];\n    setCartProducts(savedCart);\n  }, []);\n\n  //Delete cart function\n  const deleteCart = () => {\n    setCartProducts([]);\n    const existingCart = JSON.parse(localStorage.getItem('cartProducts') || []);\n    existingCart.splice(0, existingCart.length);\n    localStorage.setItem('cartProducts', JSON.stringify(existingCart));\n    console.log('Cart Deleted', existingCart);\n  };\n\n  //Room Price Handling\n  const roomTypeOptionsArray = ['Dormitory', 'Double Room Shared Toilet & Shower', 'Double Room Private Toilet & Bath', 'Japanese Twin Room', '4 Bed Room'];\n  const [dormitoryPrice, setDormitoryPrice] = useState(3100);\n  const [doubleSharedPrice, setDoubleSharedPrice] = useState(3200);\n  const [doublePrivatePrice, setDoublePrivatePrice] = useState(3500);\n  const [japaneseTwinPrice, setJapaneseTwinPrice] = useState(4000);\n  const [fourBedPrice, setFourBedPrice] = useState(5000);\n\n  //Music Schedule Handling\n  const [musicSchedule, setMusicSchedule] = useState([]);\n  //Fetch Music Schedule data \n  const fetchMusicScheduleData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/musicschedule', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMusicSchedule(data.data);\n        console.log(\"Music Schedule Data Received.\");\n      }\n    } catch (error) {\n      console.error(\"Error obtaining music schedule data: \", error);\n    }\n  };\n\n  //Fetch Music Data on Mount\n  useEffect(() => {\n    fetchMusicScheduleData();\n    console.log(\"Initial Music Schedule Fetch Initiated.\");\n  }, []);\n\n  //Values to be passed to children\n  const values = {\n    userLoggedIn,\n    setUserLoggedIn,\n    editProfile,\n    setEditProfile,\n    cartProducts,\n    setCartProducts,\n    addReservation,\n    deleteCart,\n    removeReservation,\n    dormitoryPrice,\n    setDormitoryPrice,\n    doubleSharedPrice,\n    setDoubleSharedPrice,\n    doublePrivatePrice,\n    setDoublePrivatePrice,\n    japaneseTwinPrice,\n    setJapaneseTwinPrice,\n    fourBedPrice,\n    setFourBedPrice,\n    musicSchedule,\n    setMusicSchedule\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 13\n  }, this);\n};\n_s(DataProvider, \"iwscTZYRzjuKKWf9zm1XkZbMriU=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","localStorage","getItem","setItem","userLoggedIn","setUserLoggedIn","editProfile","setEditProfile","cartProducts","setCartProducts","getValues","obj","keys","map","key","addReservation","product","stored","existingCart","JSON","parse","productToStore","reservationStartDate","Date","toISOString","reservationEndDate","push","stringify","console","log","removeReservation","reservationToRemove","updatedCart","filter","reservation","String","roomOption","people","savedCart","deleteCart","splice","length","roomTypeOptionsArray","dormitoryPrice","setDormitoryPrice","doubleSharedPrice","setDoubleSharedPrice","doublePrivatePrice","setDoublePrivatePrice","japaneseTwinPrice","setJapaneseTwinPrice","fourBedPrice","setFourBedPrice","musicSchedule","setMusicSchedule","fetchMusicScheduleData","response","fetch","method","headers","credentials","data","json","ok","error","values","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kevin/OneDrive/Documents/Visual Studio Code/.vscode/RealEstateApp/realestateapp-main/realestateappfrontend/realestateapp/src/DataProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n\n//Create Context\nexport const DataContext = createContext();\n\n\n//Create Provider Element\nexport const DataProvider = ({children}) => {\n\n    useEffect(() => {\n        if (localStorage.getItem('userLoggedIn') === null) {\n            localStorage.setItem('userLoggedIn', 'false'); //Initialize userLoggedIn in local storage\n        }\n    }, []);\n\n    //userLoggedIn variable handling\n    const [ userLoggedIn, setUserLoggedIn ] = useState(()=> {\n        return localStorage.getItem('userLoggedIn') === 'true';\n    });\n\n    //editProfile variable\n    const [ editProfile, setEditProfile ] = useState(false);\n\n    //State to store cart product IDs for use on Cart Page\n    const [ cartProducts, setCartProducts ] = useState([]);\n\n    //Function For Filtering Product Object Key Value Pairs\n    const getValues = (obj, keys) => {\n        return keys.map(key => obj[key]);\n    }\n\n    //Function for adding a product to the local storage 'cartProducts' variable\n        const addReservation = (product) => {\n        const stored = localStorage.getItem('cartProducts');\n        const existingCart = stored ? JSON.parse(stored) : [];\n        // Convert date fields to ISO strings before storing\n        const productToStore = {\n            ...product,\n            reservationStartDate: product.reservationStartDate instanceof Date\n                ? product.reservationStartDate.toISOString()\n                : product.reservationStartDate,\n            reservationEndDate: product.reservationEndDate instanceof Date\n                ? product.reservationEndDate.toISOString()\n                : product.reservationEndDate,\n        };\n        existingCart.push(productToStore);\n        localStorage.setItem('cartProducts', JSON.stringify(existingCart));\n        setCartProducts(existingCart);\n        console.log(\"Cart Products: \", existingCart);\n    };\n    const removeReservation = (reservationToRemove) => {\n        const stored = localStorage.getItem('cartProducts');\n        const existingCart = stored ? JSON.parse(stored) : [];\n        const updatedCart = existingCart.filter(reservation =>\n            !(\n                String(reservation.reservationStartDate) === String(\n                    reservationToRemove.reservationStartDate instanceof Date\n                        ? reservationToRemove.reservationStartDate.toISOString()\n                        : reservationToRemove.reservationStartDate\n                ) &&\n                String(reservation.reservationEndDate) === String(\n                    reservationToRemove.reservationEndDate instanceof Date\n                        ? reservationToRemove.reservationEndDate.toISOString()\n                        : reservationToRemove.reservationEndDate\n                ) &&\n                reservation.roomOption === reservationToRemove.roomOption &&\n                reservation.people === reservationToRemove.people\n            )\n        );\n        localStorage.setItem('cartProducts', JSON.stringify(updatedCart));\n        setCartProducts(updatedCart);\n        console.log(\"Cart Products: \", updatedCart);\n    };\n\n\n    //set cartProducts to the local storage data for 'cartProducts' on page load\n    useEffect(() => {\n        const stored = localStorage.getItem('cartProducts');\n        const savedCart = stored ? JSON.parse(stored) : [];\n        setCartProducts(savedCart);\n\n    }, []);\n\n    //Delete cart function\n    const deleteCart = () => {\n        setCartProducts([]);\n        const existingCart = JSON.parse(localStorage.getItem('cartProducts') || []);\n        existingCart.splice(0, existingCart.length)\n        localStorage.setItem('cartProducts', JSON.stringify(existingCart));\n        console.log('Cart Deleted', existingCart);\n\n\n    }\n\n    //Room Price Handling\n    const roomTypeOptionsArray = ['Dormitory', 'Double Room Shared Toilet & Shower', 'Double Room Private Toilet & Bath', 'Japanese Twin Room', '4 Bed Room']\n    const [ dormitoryPrice, setDormitoryPrice ] = useState(3100);\n    const [ doubleSharedPrice, setDoubleSharedPrice ] = useState(3200);\n    const [ doublePrivatePrice, setDoublePrivatePrice ] = useState(3500);\n    const [ japaneseTwinPrice, setJapaneseTwinPrice ] = useState(4000);\n    const [ fourBedPrice, setFourBedPrice ] = useState(5000);\n\n\n    //Music Schedule Handling\n    const [ musicSchedule, setMusicSchedule ] = useState([]);\n    //Fetch Music Schedule data \n    const fetchMusicScheduleData = async () => {\n        \n\n        try {\n            const response = await fetch('http://localhost:5000/musicschedule', \n            \n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n\n                setMusicSchedule(data.data);\n                console.log(\"Music Schedule Data Received.\");\n\n            }\n         \n        }\n        catch (error) {\n            console.error(\"Error obtaining music schedule data: \", error)\n        }\n    }\n\n    //Fetch Music Data on Mount\n    useEffect(() => {\n        fetchMusicScheduleData(); \n        console.log(\"Initial Music Schedule Fetch Initiated.\")\n    }, []);\n\n  \n\n\n    //Values to be passed to children\n    const values = {userLoggedIn, setUserLoggedIn, editProfile, setEditProfile, cartProducts, setCartProducts, addReservation, deleteCart, removeReservation, dormitoryPrice, setDormitoryPrice, doubleSharedPrice, setDoubleSharedPrice, doublePrivatePrice, setDoublePrivatePrice, japaneseTwinPrice, setJapaneseTwinPrice, fourBedPrice, setFourBedPrice, musicSchedule, setMusicSchedule }\n\n\n    return (<DataContext.Provider value ={values}>{/*Pass States to Children*/}\n                {children}\n            </DataContext.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}