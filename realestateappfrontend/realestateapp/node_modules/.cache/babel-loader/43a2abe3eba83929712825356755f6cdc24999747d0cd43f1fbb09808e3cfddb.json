{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\.vscode\\\\RealEstateAppBackup\\\\realestateappfrontend\\\\realestateapp\\\\src\\\\ManageBooking.js\",\n  _s2 = $RefreshSig$();\nimport './ManageBooking.css';\nimport Navbar from './Custom_Navbar';\nimport CustomFooter from './Custom_Footer';\nimport { useState, useEffect, useContext } from 'react';\nimport { DataContext } from './DataProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ManageBookings = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [savedScroll, setSavedScroll] = useState(0);\n  const today = new Date();\n  const [selectedYear, setSelectedYear] = useState(today.getFullYear());\n  const [selectedMonth, setSelectedMonth] = useState(today.getMonth());\n  const [reservationData, setReservationData] = useState([]);\n  const [selectedReservation, setSelectedReservation] = useState(null);\n  const [editReservation, setEditReservation] = useState(false);\n  const [editedReservation, setEditedReservation] = useState({});\n  const {\n    dormitoryPrice,\n    setDormitoryPrice,\n    doubleSharedPrice,\n    setDoubleSharedPrice,\n    doublePrivatePrice,\n    setDoublePrivatePrice,\n    japaneseTwinPrice,\n    setJapenseTwinPrice,\n    fourBedPrice,\n    setFourBedPrice\n  } = useContext(DataContext);\n\n  //Room Option Variables\n  const roomTypeOptionsArray = ['Dormitory', 'Double Room Shared Toilet & Shower', 'Double Room Private Toilet & Bath', 'Japanese Twin Room', '4 Bed Room'];\n  const dormitoryRooms = ['202A', '202B', '202C', '202D', '202E', '202F', '202G', '202H', '202I', '202K', '202L', '203A', '203B', '203C', '203D', '203E', '203F', '203G', '203H', '203I', '203K', '203L', '204A', '204B', '204C', '204D', '204E', '204F', '204G', '204H', '204I', '204K', '204L'];\n  const doubleSharedRooms = ['201', '205'];\n  const doubleRoomPrivate = ['206', '207'];\n  const japaneseTwinRooms = ['301', '302', '303', '304', '305', '306', '307'];\n  const fourbedRooms = ['401', '402', '403', '404', '405', '406'];\n\n  //Calendar Generation Helper\n  function getDaysInMonth(month, year) {\n    return new Date(year, month + 1, 0).getDate();\n  }\n  ;\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const [selectedDay, setSelectedDay] = useState(null); // e.g. '2025-06-12'\n  const [showDayModal, setShowDayModal] = useState(false);\n  const [dayReservations, setDayReservations] = useState([]);\n\n  //Helper function to get all reservations for a given day\n  const getReservationsForDate = dateStr => {\n    return reservationData.filter(res => {\n      const start = new Date(res[\"Start Date\"]);\n      const end = new Date(res[\"End Date\"]);\n      const d = new Date(dateStr);\n      return d >= start && d <= end;\n    });\n  };\n\n  //Handler for clicking a day\n  const handleDayClick = dateStr => {\n    const reservations = getReservationsForDate(dateStr);\n    setDayReservations(reservations);\n    setSelectedDay(dateStr);\n    setShowDayModal(true);\n  };\n\n  //Handler for selecting a reservation within the day\n  const handleReservationClick = reservation => {\n    setSelectedReservation(reservation);\n    setEditReservation(false);\n    setShowDayModal(false);\n  };\n\n  //Calculate Total rooms in building\n  const totalRooms = dormitoryRooms.length + doubleSharedRooms.length + doubleRoomPrivate.length + japaneseTwinRooms.length + fourbedRooms.length;\n  const DisplayMonth = () => {\n    const daysInMonth = getDaysInMonth(selectedMonth, selectedYear);\n    const firstDay = new Date(selectedYear, selectedMonth, 1).getDay();\n    const rows = [];\n    let cells = [];\n    for (let i = 0; i < firstDay; i++) {\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 24\n      }, this));\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const dateObj = new Date(selectedYear, selectedMonth, day);\n      const dateStr = dateObj.toISOString().slice(0, 10);\n      const reservationsForDay = getReservationsForDate(dateStr);\n      const numReservations = reservationsForDay.length;\n      const uniqueRooms = new Set(reservationsForDay.map(r => r[\"Room Number\"]));\n      const isHotelFull = uniqueRooms.size >= totalRooms;\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {\n        className: isHotelFull ? \"hotel-full\" : \"\",\n        style: {\n          position: \"relative\",\n          cursor: \"pointer\",\n          background: isHotelFull ? \"#ffcccc\" : undefined\n        },\n        onClick: () => handleDayClick(dateStr),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendardaynumber\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), isHotelFull ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontWeight: \"bold\"\n          },\n          children: \"Hotel Full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservationtotal\",\n          children: [numReservations, \" Reservation\", numReservations !== 1 ? \"s\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, `${selectedYear}-${selectedMonth}-${day}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this));\n      if (cells.length % 7 === 0) {\n        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: cells\n        }, `row-${day}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 27\n        }, this));\n        cells = [];\n      }\n    }\n    if (cells.length) {\n      while (cells.length < 7) {\n        cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-end-${cells.length}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 28\n        }, this));\n      }\n      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cells\n      }, \"row-last\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookingmanagercalendarbody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendarcontrols\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMonth,\n            onChange: e => {\n              setSelectedMonth(Number(e.target.value));\n            },\n            children: months.map((m, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: idx,\n              children: m\n            }, m, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"yearselection\",\n            type: \"number\",\n            value: selectedYear,\n            onChange: e => {\n              setSelectedYear(Number(e.target.value));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendartablewrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"calendartable\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Su\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Mo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 48\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Tu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 59\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"We\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 70\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Th\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 81\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Fr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 92\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 103\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: rows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), showDayModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservationmodaloverlay\",\n        onClick: () => setShowDayModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservationmodalcontentcalendar\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Reservations for \", selectedDay]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), dayReservations.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No reservations for this day.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: dayReservations.map(res => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: \"10px\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => handleReservationClick(res),\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: res[\"Name\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this), \" (Room \", res[\"Room Number\"], \", \", res[\"Room Option\"], \")\"]\n              }, res[\"Reservation ID\"], true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"closemodalbtn\",\n            onClick: () => setShowDayModal(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  };\n\n  //Get Reservation Data Function\n  const getReservationData = async () => {\n    //GET request\n    try {\n      const response = await fetch('http://localhost:5000/reservationdata', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include' //This allows cookies to be sent and received\n      });\n      const data = await response.json();\n\n      //Valid response check\n      if (response.ok) {\n        setReservationData(data.data);\n        console.log('Reservations Received');\n      }\n    } catch (error) {\n      console.error(\"Error Retrieving Reservations:\", error.response ? error.response.data : error.message);\n    }\n  };\n  useEffect(() => {\n    getReservationData();\n  }, []);\n  useEffect(() => {\n    console.log(\"Rservation Data: \", reservationData);\n  }, [reservationData]);\n\n  // Helper to get price per room type\n  const getRoomPrice = roomOption => {\n    switch (roomOption) {\n      case 'Dormitory':\n        return dormitoryPrice;\n      case 'Double Room Shared Toilet & Shower':\n        return doubleSharedPrice;\n      case 'Double Room Private Toilet & Bath':\n        return doublePrivatePrice;\n      case 'Japanese Twin Room':\n        return japaneseTwinPrice;\n      case '4 Bed Room':\n        return fourBedPrice;\n      default:\n        return 0;\n    }\n  };\n\n  // Helper to get number of nights (exclusive of end date)\n  const getNights = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    // Nights = difference in days (exclusive of end date)\n    const diffTime = end.getTime() - start.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return Math.max(1, diffDays);\n  };\n\n  // Calculate total for the current edit form\n  const getEditTotal = () => {\n    const startDate = editedReservation[\"Start Date\"] || selectedReservation[\"Start Date\"];\n    const endDate = editedReservation[\"End Date\"] || selectedReservation[\"End Date\"];\n    const roomOption = editedReservation[\"Room Option\"] || selectedReservation[\"Room Option\"];\n    if (!startDate || !endDate || !roomOption) return 0;\n    const nights = getNights(startDate, endDate);\n    const price = getRoomPrice(roomOption);\n    return (nights * price).toFixed(2);\n  };\n  const deleteReservation = async reservation => {\n    try {\n      const response = await fetch('http://localhost:5000/reservationdelete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reservationId: reservation[\"Reservation ID\"]\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        getReservationData();\n        setSelectedReservation(null);\n        setEditReservation(false);\n        alert(\"Reservation Deleted\");\n      } else {\n        alert('Failed to delete reservation.');\n      }\n    } catch (error) {\n      console.error(\"Error Deleting Reservation: \", error);\n    }\n  };\n\n  //Calendar for showing reservation date ranges\n\n  // State for reservation calendar modal\n  const [showReservationCalendar, setShowReservationCalendar] = useState(false);\n  const [calendarReservation, setCalendarReservation] = useState(null);\n  const showOnCalendar = reservation => {\n    setCalendarReservation(reservation);\n    setShowReservationCalendar(true);\n  };\n\n  // Helper: get all dates between two dates (inclusive)\n  function getDatesBetween(start, end) {\n    const arr = [];\n    // Parse start and end as year, month, day (local)\n    const [sy, sm, sd] = start.split('-').map(Number);\n    const [ey, em, ed] = end.split('-').map(Number);\n    let dt = new Date(sy, sm - 1, sd);\n    const endDt = new Date(ey, em - 1, ed);\n    while (dt <= endDt) {\n      const yyyy = dt.getFullYear();\n      const mm = String(dt.getMonth() + 1).padStart(2, '0');\n      const dd = String(dt.getDate()).padStart(2, '0');\n      arr.push(`${yyyy}-${mm}-${dd}`);\n      dt.setDate(dt.getDate() + 1);\n    }\n    return arr;\n  }\n  const ReservationsTable = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservationstablewrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reservation ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reservationData.map((res, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => {\n            setSelectedReservation(res);\n            setEditReservation(false);\n          },\n          className: \"reservationrow\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Start Date\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"End Date\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Room Number\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Room Option\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"People\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Total\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: res[\"Reservation ID\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 21\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this), selectedReservation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservationmodaloverlay\",\n      onClick: () => {\n        setSelectedReservation(null);\n        setEditReservation(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservationmodalcontent\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reservation Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this), editReservation ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: async e => {\n            e.preventDefault();\n            // Conflict check before submit\n            const startDate = editedReservation[\"Start Date\"] || selectedReservation[\"Start Date\"];\n            const endDate = editedReservation[\"End Date\"] || selectedReservation[\"End Date\"];\n            const roomOption = editedReservation[\"Room Option\"] || selectedReservation[\"Room Option\"];\n            const roomNumber = editedReservation[\"Room Number\"] || selectedReservation[\"Room Number\"];\n            const reservationId = selectedReservation[\"Reservation ID\"];\n\n            // Helper: get all reservations for this room option, excluding the one being edited\n            const otherReservations = reservationData.filter(r => r[\"Room Option\"] === roomOption && r[\"Room Number\"] === roomNumber && r[\"Reservation ID\"] !== reservationId);\n\n            // Helper: get all reservations for this room option (for fully booked logic)\n            const optionReservations = reservationData.filter(r => r[\"Room Option\"] === roomOption && r[\"Reservation ID\"] !== reservationId);\n\n            // Helper: get all dates between two dates (inclusive)\n            function getDatesBetween(start, end) {\n              const arr = [];\n              let dt = new Date(start);\n              while (dt <= new Date(end)) {\n                arr.push(dt.toISOString().slice(0, 10));\n                dt.setDate(dt.getDate() + 1);\n              }\n              return arr;\n            }\n\n            // 1. Check for overlap with other reservations for the same room/option\n            let conflict = false;\n            for (const r of otherReservations) {\n              const rStart = r[\"Start Date\"];\n              const rEnd = r[\"End Date\"];\n              if (startDate <= rEnd && endDate >= rStart) {\n                conflict = true;\n                break;\n              }\n            }\n\n            // 2. Check for fully booked days (adjacent/within)\n            // Build a map of date => count of rooms booked for this option\n            const roomCount = roomOption === \"Dormitory\" ? dormitoryRooms.length : roomOption === \"Double Room Shared Toilet & Shower\" ? doubleSharedRooms.length : roomOption === \"Double Room Private Toilet & Bath\" ? doubleRoomPrivate.length : roomOption === \"Japanese Twin Room\" ? japaneseTwinRooms.length : roomOption === \"4 Bed Room\" ? fourbedRooms.length : 0;\n            const dateRoomMap = {};\n            for (const r of optionReservations) {\n              const rDates = getDatesBetween(r[\"Start Date\"], r[\"End Date\"]);\n              for (const d of rDates) {\n                dateRoomMap[d] = (dateRoomMap[d] || 0) + 1;\n              }\n            }\n\n            // Helper: is a date fully booked for this option?\n            function isFullyBooked(date) {\n              return (dateRoomMap[date] || 0) >= roomCount;\n            }\n\n            // Check for adjacent fully booked start date\n            const prevDay = new Date(startDate);\n            prevDay.setDate(prevDay.getDate() - 1);\n            const prevDayStr = prevDay.toISOString().slice(0, 10);\n            if (isFullyBooked(prevDayStr)) {\n              alert(\"Cannot select a start date adjacent to a fully booked day for this room type.\");\n              return;\n            }\n\n            // Check for fully booked days strictly between start and end\n            const allDates = getDatesBetween(startDate, endDate);\n            let hasBlockedBetween = false;\n            for (let i = 1; i < allDates.length - 1; i++) {\n              if (isFullyBooked(allDates[i])) {\n                hasBlockedBetween = true;\n                break;\n              }\n            }\n            if (hasBlockedBetween) {\n              alert(\"Cannot select an end date with fully booked days between start and end for this room type.\");\n              return;\n            }\n            if (conflict) {\n              alert(\"This room is already booked for the selected dates.\");\n              return;\n            }\n\n            // If all checks pass, submit as before\n            const updatedReservation = {\n              ...selectedReservation,\n              ...editedReservation\n            };\n            try {\n              const response = await fetch('http://localhost:5000/reservationdataupdate', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(updatedReservation),\n                credentials: 'include'\n              });\n              if (response.ok) {\n                getReservationData();\n                setSelectedReservation(updatedReservation);\n                setEditReservation(false);\n              }\n            } catch (error) {\n              console.error(\"Failed to Update Reservation: \", error);\n              alert('Error updating reservation.');\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedReservation[\"Name\"] !== undefined ? editedReservation[\"Name\"] : selectedReservation[\"Name\"],\n                onChange: e => setEditedReservation(prev => ({\n                  ...prev,\n                  [\"Name\"]: e.target.value\n                })),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editedReservation[\"Start Date\"] !== undefined ? editedReservation[\"Start Date\"] : selectedReservation[\"Start Date\"],\n                onChange: e => setEditedReservation(prev => ({\n                  ...prev,\n                  [\"Start Date\"]: e.target.value\n                })),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editedReservation[\"End Date\"] !== undefined ? editedReservation[\"End Date\"] : selectedReservation[\"End Date\"],\n                onChange: e => setEditedReservation(prev => ({\n                  ...prev,\n                  [\"End Date\"]: e.target.value\n                })),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Room Option:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedReservation[\"Room Option\"] !== undefined ? editedReservation[\"Room Option\"] : selectedReservation[\"Room Option\"],\n                onChange: e => {\n                  const newRoomOption = e.target.value;\n                  let defaultRoom = \"\";\n                  if (newRoomOption === 'Dormitory') defaultRoom = dormitoryRooms[0];else if (newRoomOption === 'Double Room Shared Toilet & Shower') defaultRoom = doubleSharedRooms[0];else if (newRoomOption === 'Double Room Private Toilet & Bath') defaultRoom = doubleRoomPrivate[0];else if (newRoomOption === 'Japanese Twin Room') defaultRoom = japaneseTwinRooms[0];else if (newRoomOption === '4 Bed Room') defaultRoom = fourbedRooms[0];\n                  setEditedReservation(prev => ({\n                    ...prev,\n                    [\"Room Option\"]: newRoomOption,\n                    [\"Room Number\"]: defaultRoom // set default room number\n                  }));\n                },\n                required: true,\n                children: roomTypeOptionsArray.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: opt,\n                  children: opt\n                }, opt, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Room Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedReservation[\"Room Number\"] !== undefined ? editedReservation[\"Room Number\"] : selectedReservation[\"Room Number\"],\n                onChange: e => setEditedReservation(prev => ({\n                  ...prev,\n                  [\"Room Number\"]: e.target.value\n                })),\n                required: true,\n                children: (() => {\n                  const roomType = editedReservation[\"Room Option\"] !== undefined ? editedReservation[\"Room Option\"] : selectedReservation[\"Room Option\"];\n                  if (roomType === 'Dormitory') return dormitoryRooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 94\n                  }, this));\n                  if (roomType === 'Double Room Shared Toilet & Shower') return doubleSharedRooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 122\n                  }, this));\n                  if (roomType === 'Double Room Private Toilet & Bath') return doubleRoomPrivate.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 121\n                  }, this));\n                  if (roomType === 'Japanese Twin Room') return japaneseTwinRooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 106\n                  }, this));\n                  if (roomType === '4 Bed Room') return fourbedRooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: r,\n                    children: r\n                  }, r, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 93\n                  }, this));\n                  return null;\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"People:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: 1,\n                value: editedReservation[\"People\"] !== undefined ? editedReservation[\"People\"] : selectedReservation[\"People\"],\n                onChange: e => setEditedReservation(prev => ({\n                  ...prev,\n                  [\"People\"]: e.target.value\n                })),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 33\n              }, this), \" \\xA5\", getEditTotal()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Reservation ID: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 29\n              }, this), selectedReservation[\"Reservation ID\"]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservationdetailsbuttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"closemodalbtn\",\n              onClick: () => setEditReservation(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"editreservationbtn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(selectedReservation).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [key, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 29\n              }, this), \" \", value === null || value === void 0 ? void 0 : value.toString()]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservationdetailsbuttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"closemodalbtn\",\n              onClick: () => setSelectedReservation(null),\n              children: \"Close Reservation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"editreservationbtn\",\n              onClick: () => {\n                setEditReservation(true);\n                setEditedReservation(selectedReservation);\n              },\n              children: \"Edit Reservation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deletereservationbtn\",\n              onClick: () => deleteReservation(selectedReservation),\n              children: \"Delete Reservation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"showoncalendarbtn\",\n              onClick: () => showOnCalendar(selectedReservation),\n              children: \"Show On Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 9\n  }, this);\n  const ReservationCalendarModal = ({\n    reservation\n  }) => {\n    if (!reservation) return null;\n\n    // Use the month/year of the reservation's start date\n    const startDate = new Date(reservation[\"Start Date\"]);\n    const endDate = new Date(reservation[\"End Date\"]);\n    const year = startDate.getFullYear();\n    const month = startDate.getMonth();\n    const daysInMonth = getDaysInMonth(month, year);\n    const firstDay = new Date(year, month, 1).getDay();\n\n    // Get all dates the reservation occupies\n    const reservationDates = new Set(getDatesBetween(reservation[\"Start Date\"], reservation[\"End Date\"]));\n    const roomNumber = reservation[\"Room Number\"];\n    const rows = [];\n    let cells = [];\n    for (let i = 0; i < firstDay; i++) {\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 24\n      }, this));\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const yyyy = year;\n      const mm = String(month + 1).padStart(2, '0');\n      const dd = String(day).padStart(2, '0');\n      const dateStr = `${yyyy}-${mm}-${dd}`; // local date string\n      const isReserved = reservationDates.has(dateStr);\n      cells.push(/*#__PURE__*/_jsxDEV(\"td\", {\n        style: {\n          background: isReserved ? rgb : undefined,\n          textAlign: \"center\",\n          fontWeight: isReserved ? \"bold\" : undefined,\n          color: isReserved ? \"black\" : undefined,\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendardaynumber\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 21\n        }, this), isReserved && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            fontSize: \"1.1em\"\n          },\n          children: roomNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 25\n        }, this)]\n      }, `${year}-${month}-${day}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 17\n      }, this));\n      if (cells.length % 7 === 0) {\n        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: cells\n        }, `row-${day}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 27\n        }, this));\n        cells = [];\n      }\n    }\n    if (cells.length) {\n      while (cells.length < 7) {\n        cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-end-${cells.length}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 28\n        }, this));\n      }\n      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cells\n      }, \"row-last\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 23\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendartablewrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"calendartable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Su\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"We\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Th\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 73\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 13\n    }, this);\n  };\n  const [editRoomPrices, setEditRoomPrices] = useState(false);\n  const ChangeRoomPrices = () => {\n    _s();\n    // Local state for editing prices\n    const [localPrices, setLocalPrices] = useState({\n      dormitory: dormitoryPrice,\n      doubleShared: doubleSharedPrice,\n      doublePrivate: doublePrivatePrice,\n      japaneseTwin: japaneseTwinPrice,\n      fourBed: fourBedPrice\n    });\n\n    // When entering edit mode, sync local state with context\n    useEffect(() => {\n      if (editRoomPrices) {\n        setLocalPrices({\n          dormitory: dormitoryPrice,\n          doubleShared: doubleSharedPrice,\n          doublePrivate: doublePrivatePrice,\n          japaneseTwin: japaneseTwinPrice,\n          fourBed: fourBedPrice\n        });\n        window.scrollTo(0, savedScroll);\n      }\n    }, [editRoomPrices]);\n\n    // Handlers for input changes\n    const handleInputChange = (key, value) => {\n      setLocalPrices(prev => ({\n        ...prev,\n        [key]: value\n      }));\n    };\n\n    // Confirm and update context\n    const handleConfirm = () => {\n      setDormitoryPrice(localPrices.dormitory);\n      setDoubleSharedPrice(localPrices.doubleShared);\n      setDoublePrivatePrice(localPrices.doublePrivate);\n      setJapenseTwinPrice(localPrices.japaneseTwin);\n      setFourBedPrice(localPrices.fourBed);\n      setEditRoomPrices(false);\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!editRoomPrices && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roompricewrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roompricetitle\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Room Prices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roompriceslist\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Dormitory Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", dormitoryPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 63\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Double Shared Room Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", doubleSharedPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Double Private Room Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", doublePrivatePrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 73\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Japense Twin Room Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", japaneseTwinPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Four Bed Room Price: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\xA5\", fourBedPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editroompricesbtn\",\n          onClick: () => {\n            setSavedScroll(window.scrollY);\n            setEditRoomPrices(true);\n          },\n          children: \"Edit Room Prices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 21\n      }, this), editRoomPrices && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roompricewrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roompricetitle\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Room Prices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roompriceslist\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Dormitory Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.dormitory,\n                onChange: e => handleInputChange('dormitory', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Double Shared Room Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.doubleShared,\n                onChange: e => handleInputChange('doubleShared', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Double Private Room Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.doublePrivate,\n                onChange: e => handleInputChange('doublePrivate', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Japense Twin Room Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.japaneseTwin,\n                onChange: e => handleInputChange('japaneseTwin', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Four Bed Room Price: \\xA5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: localPrices.fourBed,\n                onChange: e => handleInputChange('fourBed', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editroompricesbtn\",\n          onClick: handleConfirm,\n          children: \"Confirm Room Prices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  };\n  _s(ChangeRoomPrices, \"2ZHeLVNi2ktGrixWfnk1z5Mynio=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookingsmanager\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayMonth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 13\n      }, this), showReservationCalendar && calendarReservation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservationcalendaroverlay\",\n        onClick: () => setShowReservationCalendar(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservationmodalcontentcalendar\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Reservation Calendar For:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 25\n            }, this), calendarReservation[\"Name\"], \" (Room \", calendarReservation[\"Room Number\"], \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ReservationCalendarModal, {\n            reservation: calendarReservation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"closemodalbtn\",\n            onClick: () => setShowReservationCalendar(false),\n            children: \"Close Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReservationsTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChangeRoomPrices, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s2(ManageBookings, \"9pVqURAAMZtgFkFVfYVUgWgP1KE=\");\n_c = ManageBookings;\nexport default ManageBookings;\nvar _c;\n$RefreshReg$(_c, \"ManageBookings\");","map":{"version":3,"names":["Navbar","CustomFooter","useState","useEffect","useContext","DataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ManageBookings","_s2","_s","$RefreshSig$","savedScroll","setSavedScroll","today","Date","selectedYear","setSelectedYear","getFullYear","selectedMonth","setSelectedMonth","getMonth","reservationData","setReservationData","selectedReservation","setSelectedReservation","editReservation","setEditReservation","editedReservation","setEditedReservation","dormitoryPrice","setDormitoryPrice","doubleSharedPrice","setDoubleSharedPrice","doublePrivatePrice","setDoublePrivatePrice","japaneseTwinPrice","setJapenseTwinPrice","fourBedPrice","setFourBedPrice","roomTypeOptionsArray","dormitoryRooms","doubleSharedRooms","doubleRoomPrivate","japaneseTwinRooms","fourbedRooms","getDaysInMonth","month","year","getDate","months","selectedDay","setSelectedDay","showDayModal","setShowDayModal","dayReservations","setDayReservations","getReservationsForDate","dateStr","filter","res","start","end","d","handleDayClick","reservations","handleReservationClick","reservation","totalRooms","length","DisplayMonth","daysInMonth","firstDay","getDay","rows","cells","i","push","fileName","_jsxFileName","lineNumber","columnNumber","day","dateObj","toISOString","slice","reservationsForDay","numReservations","uniqueRooms","Set","map","r","isHotelFull","size","className","style","position","cursor","background","undefined","onClick","children","color","fontWeight","value","onChange","e","Number","target","m","idx","type","stopPropagation","marginBottom","getReservationData","response","fetch","method","headers","credentials","data","json","ok","console","log","error","message","getRoomPrice","roomOption","getNights","startDate","endDate","diffTime","getTime","diffDays","Math","ceil","max","getEditTotal","nights","price","toFixed","deleteReservation","body","JSON","stringify","reservationId","alert","showReservationCalendar","setShowReservationCalendar","calendarReservation","setCalendarReservation","showOnCalendar","getDatesBetween","arr","sy","sm","sd","split","ey","em","ed","dt","endDt","yyyy","mm","String","padStart","dd","setDate","ReservationsTable","onSubmit","preventDefault","roomNumber","otherReservations","optionReservations","conflict","rStart","rEnd","roomCount","dateRoomMap","rDates","isFullyBooked","date","prevDay","prevDayStr","allDates","hasBlockedBetween","updatedReservation","prev","required","newRoomOption","defaultRoom","opt","roomType","min","Object","entries","key","toString","ReservationCalendarModal","reservationDates","isReserved","has","rgb","textAlign","top","left","transform","fontSize","editRoomPrices","setEditRoomPrices","ChangeRoomPrices","localPrices","setLocalPrices","dormitory","doubleShared","doublePrivate","japaneseTwin","fourBed","window","scrollTo","handleInputChange","handleConfirm","scrollY","_c","$RefreshReg$"],"sources":["C:/Users/kevin/.vscode/RealEstateAppBackup/realestateappfrontend/realestateapp/src/ManageBooking.js"],"sourcesContent":["import './ManageBooking.css';\r\nimport Navbar from './Custom_Navbar';\r\nimport CustomFooter from './Custom_Footer';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { DataContext } from './DataProvider';\r\n\r\nconst ManageBookings = () => {\r\n\r\n    const [savedScroll, setSavedScroll] = useState(0);\r\n    const today = new Date();\r\n    const [selectedYear, setSelectedYear] = useState(today.getFullYear());\r\n    const [selectedMonth, setSelectedMonth] = useState(today.getMonth());\r\n    const [ reservationData, setReservationData ] = useState([]);\r\n    const [selectedReservation, setSelectedReservation] = useState(null);\r\n    const [ editReservation, setEditReservation ] = useState(false);\r\n    const [editedReservation, setEditedReservation] = useState({});\r\n    const { dormitoryPrice, setDormitoryPrice, doubleSharedPrice, setDoubleSharedPrice, doublePrivatePrice, setDoublePrivatePrice, japaneseTwinPrice, setJapenseTwinPrice, fourBedPrice, setFourBedPrice } = useContext(DataContext);\r\n\r\n    //Room Option Variables\r\n    const roomTypeOptionsArray = ['Dormitory', 'Double Room Shared Toilet & Shower', 'Double Room Private Toilet & Bath', 'Japanese Twin Room', '4 Bed Room']\r\n    const dormitoryRooms = ['202A', '202B', '202C', '202D', '202E', '202F', '202G', '202H', '202I', '202K', '202L', '203A', '203B', '203C', '203D', '203E', '203F', '203G', '203H', '203I', '203K', '203L', '204A', '204B', '204C', '204D', '204E', '204F', '204G', '204H', '204I', '204K', '204L'];\r\n    const doubleSharedRooms = ['201', '205'];\r\n    const doubleRoomPrivate = ['206', '207'];\r\n    const japaneseTwinRooms = ['301', '302', '303', '304', '305', '306', '307'];\r\n    const fourbedRooms = ['401', '402', '403', '404', '405', '406'];\r\n\r\n\r\n\r\n    //Calendar Generation Helper\r\n    function getDaysInMonth(month, year) {\r\n        return new Date(year, month + 1, 0).getDate();\r\n    };\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const [selectedDay, setSelectedDay] = useState(null); // e.g. '2025-06-12'\r\n    const [showDayModal, setShowDayModal] = useState(false);\r\n    const [dayReservations, setDayReservations] = useState([]);\r\n\r\n    //Helper function to get all reservations for a given day\r\n    const getReservationsForDate = (dateStr) => {\r\n        return reservationData.filter(res => {\r\n            const start = new Date(res[\"Start Date\"]);\r\n            const end = new Date(res[\"End Date\"]);\r\n            const d = new Date(dateStr);\r\n            return d >= start && d <= end;\r\n        });\r\n        };\r\n\r\n    //Handler for clicking a day\r\n    const handleDayClick = (dateStr) => {\r\n        const reservations = getReservationsForDate(dateStr);\r\n        setDayReservations(reservations);\r\n        setSelectedDay(dateStr);\r\n        setShowDayModal(true);\r\n    };\r\n\r\n    //Handler for selecting a reservation within the day\r\n    const handleReservationClick = (reservation) => {\r\n        setSelectedReservation(reservation);\r\n        setEditReservation(false);\r\n        setShowDayModal(false);\r\n    };\r\n\r\n    //Calculate Total rooms in building\r\n    const totalRooms = dormitoryRooms.length + doubleSharedRooms.length + doubleRoomPrivate.length + japaneseTwinRooms.length + fourbedRooms.length;\r\n\r\n    const DisplayMonth = () => {\r\n        const daysInMonth = getDaysInMonth(selectedMonth, selectedYear);\r\n        const firstDay = new Date(selectedYear, selectedMonth, 1).getDay();\r\n\r\n        const rows = [];\r\n        let cells = [];\r\n\r\n        for (let i = 0; i < firstDay; i++) {\r\n            cells.push(<td key={`empty-${i}`}></td>);\r\n        }\r\n\r\n        for (let day = 1; day <= daysInMonth; day++) {\r\n            const dateObj = new Date(selectedYear, selectedMonth, day);\r\n            const dateStr = dateObj.toISOString().slice(0, 10);\r\n            const reservationsForDay = getReservationsForDate(dateStr);\r\n            const numReservations = reservationsForDay.length;\r\n            const uniqueRooms = new Set(reservationsForDay.map(r => r[\"Room Number\"]));\r\n            const isHotelFull = uniqueRooms.size >= totalRooms;\r\n\r\n            cells.push(\r\n                <td\r\n                    key={`${selectedYear}-${selectedMonth}-${day}`}\r\n                    className={isHotelFull ? \"hotel-full\" : \"\"}\r\n                    style={{ position: \"relative\", cursor: \"pointer\", background: isHotelFull ? \"#ffcccc\" : undefined }}\r\n                    onClick={() => handleDayClick(dateStr)}\r\n                >\r\n                    <div className=\"calendardaynumber\">{day}</div>\r\n                    {isHotelFull ? (\r\n                        <div style={{ color: \"red\", fontWeight: \"bold\" }}>Hotel Full</div>\r\n                    ) : (\r\n                        <div className=\"reservationtotal\">{numReservations} Reservation{numReservations !== 1 ? \"s\" : \"\"}</div>\r\n                    )}\r\n                </td>\r\n            );\r\n            if ((cells.length) % 7 === 0) {\r\n                rows.push(<tr key={`row-${day}`}>{cells}</tr>);\r\n                cells = [];\r\n            }\r\n        }\r\n\r\n        if (cells.length) {\r\n            while (cells.length < 7) {\r\n                cells.push(<td key={`empty-end-${cells.length}`}></td>);\r\n            }\r\n            rows.push(<tr key=\"row-last\">{cells}</tr>);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"bookingmanagercalendarbody\">\r\n                    <div className=\"calendarcontrols\">\r\n                        <select\r\n                            value={selectedMonth}\r\n                            onChange={e => {\r\n                            setSelectedMonth(Number(e.target.value));\r\n                            }}\r\n                        >\r\n                        {months.map((m, idx) => (\r\n                        <option key={m} value={idx}>{m}</option>\r\n                        ))}\r\n                    </select>\r\n                    <input\r\n                        className=\"yearselection\"\r\n                        type=\"number\"\r\n                        value={selectedYear}\r\n                        onChange={e => {\r\n                        setSelectedYear(Number(e.target.value));\r\n                        }}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    </div>\r\n                    <div className=\"calendartablewrapper\">\r\n                        <table className=\"calendartable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Su</th><th>Mo</th><th>Tu</th><th>We</th><th>Th</th><th>Fr</th><th>Sa</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>{rows}</tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {/* Day Modal */}\r\n                {showDayModal && (\r\n                    <div className=\"reservationmodaloverlay\" onClick={() => setShowDayModal(false)}>\r\n                        <div className=\"reservationmodalcontentcalendar\" onClick={e => e.stopPropagation()}>\r\n                            <h3>Reservations for {selectedDay}</h3>\r\n                            <br/>\r\n\r\n                            {dayReservations.length === 0 ? (\r\n                                <>\r\n                                <div>No reservations for this day.</div>\r\n                                <br/>\r\n                                </>\r\n                            ) : (\r\n                                <ul>\r\n                                    {dayReservations.map(res => (\r\n                                        <>\r\n                                        <li key={res[\"Reservation ID\"]} style={{ marginBottom: \"10px\", cursor: \"pointer\" }} onClick={() => handleReservationClick(res)}>\r\n                                            <strong>{res[\"Name\"]}</strong> (Room {res[\"Room Number\"]}, {res[\"Room Option\"]})\r\n                                        </li>\r\n                                        <br/>\r\n                                        </>\r\n                                    ))}\r\n                                </ul>\r\n                            )}\r\n                            <button className=\"closemodalbtn\" onClick={() => setShowDayModal(false)}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    };\r\n\r\n    //Get Reservation Data Function\r\n    const getReservationData = async () => {\r\n\r\n\r\n        //GET request\r\n        try {\r\n            const response = await fetch('http://localhost:5000/reservationdata',\r\n                {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                credentials: 'include', //This allows cookies to be sent and received\r\n                }\r\n            );\r\n\r\n\r\n            const data = await response.json();\r\n\r\n            //Valid response check\r\n            if (response.ok) {\r\n                setReservationData(data.data);\r\n                console.log('Reservations Received');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error Retrieving Reservations:\", error.response ? error.response.data : error.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getReservationData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Rservation Data: \", reservationData);\r\n    }, [reservationData]);\r\n\r\n    // Helper to get price per room type\r\n    const getRoomPrice = (roomOption) => {\r\n        switch(roomOption) {\r\n            case 'Dormitory': return dormitoryPrice;\r\n            case 'Double Room Shared Toilet & Shower': return doubleSharedPrice;\r\n            case 'Double Room Private Toilet & Bath': return doublePrivatePrice;\r\n            case 'Japanese Twin Room': return japaneseTwinPrice;\r\n            case '4 Bed Room': return fourBedPrice;\r\n            default: return 0;\r\n        }\r\n    };\r\n\r\n    // Helper to get number of nights (exclusive of end date)\r\n    const getNights = (startDate, endDate) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        // Nights = difference in days (exclusive of end date)\r\n        const diffTime = end.getTime() - start.getTime();\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n        return Math.max(1, diffDays);\r\n    };\r\n\r\n    // Calculate total for the current edit form\r\n    const getEditTotal = () => {\r\n        const startDate = editedReservation[\"Start Date\"] || selectedReservation[\"Start Date\"];\r\n        const endDate = editedReservation[\"End Date\"] || selectedReservation[\"End Date\"];\r\n        const roomOption = editedReservation[\"Room Option\"] || selectedReservation[\"Room Option\"];\r\n        if (!startDate || !endDate || !roomOption) return 0;\r\n        const nights = getNights(startDate, endDate);\r\n        const price = getRoomPrice(roomOption);\r\n        return (nights * price).toFixed(2);\r\n    };\r\n\r\n    const deleteReservation = async (reservation) => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/reservationdelete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ reservationId: reservation[\"Reservation ID\"] }),\r\n            credentials: 'include',\r\n            });\r\n\r\n            if (response.ok) {\r\n                getReservationData();\r\n                setSelectedReservation(null);\r\n                setEditReservation(false);\r\n                alert(\"Reservation Deleted\")\r\n            } else {\r\n                alert('Failed to delete reservation.');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error Deleting Reservation: \", error);\r\n        }\r\n    }\r\n\r\n    //Calendar for showing reservation date ranges\r\n\r\n    // State for reservation calendar modal\r\n    const [showReservationCalendar, setShowReservationCalendar] = useState(false);\r\n    const [calendarReservation, setCalendarReservation] = useState(null);\r\n\r\n    const showOnCalendar = (reservation) => {\r\n        setCalendarReservation(reservation);\r\n        setShowReservationCalendar(true);\r\n    };\r\n\r\n    // Helper: get all dates between two dates (inclusive)\r\n    function getDatesBetween(start, end) {\r\n        const arr = [];\r\n        // Parse start and end as year, month, day (local)\r\n        const [sy, sm, sd] = start.split('-').map(Number);\r\n        const [ey, em, ed] = end.split('-').map(Number);\r\n        let dt = new Date(sy, sm - 1, sd);\r\n        const endDt = new Date(ey, em - 1, ed);\r\n        while (dt <= endDt) {\r\n            const yyyy = dt.getFullYear();\r\n            const mm = String(dt.getMonth() + 1).padStart(2, '0');\r\n            const dd = String(dt.getDate()).padStart(2, '0');\r\n            arr.push(`${yyyy}-${mm}-${dd}`);\r\n            dt.setDate(dt.getDate() + 1);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    const ReservationsTable = () => (\r\n        <div className=\"reservationstablewrapper\">\r\n            <h2>Reservations</h2>\r\n            <br />\r\n            <br />\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                <th>Name</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th>Room Number</th>\r\n                <th>Room Option</th>\r\n                <th>People</th>\r\n                <th>Total</th>\r\n                <th>Reservation ID</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {reservationData.map((res, idx) => (\r\n                <tr\r\n                    key={idx}\r\n                    onClick={() => { setSelectedReservation(res); setEditReservation(false); }}\r\n                    className=\"reservationrow\"\r\n                >\r\n                    <td>{res[\"Name\"]}</td>\r\n                    <td>{res[\"Start Date\"]}</td>\r\n                    <td>{res[\"End Date\"]}</td>\r\n                    <td>{res[\"Room Number\"]}</td>\r\n                    <td>{res[\"Room Option\"]}</td>\r\n                    <td>{res[\"People\"]}</td>\r\n                    <td>{res[\"Total\"]}</td>\r\n                    <td>{res[\"Reservation ID\"]}</td>\r\n                </tr>\r\n                ))}\r\n            </tbody>\r\n            </table>\r\n            {/* Modal logic */}\r\n            {selectedReservation && (\r\n            <div\r\n                className=\"reservationmodaloverlay\"\r\n                onClick={() => { setSelectedReservation(null); setEditReservation(false); }}\r\n            >\r\n                <div className=\"reservationmodalcontent\" onClick={e => e.stopPropagation()}>\r\n                <h3>Reservation Details</h3>\r\n                <br />\r\n                {editReservation ? (\r\n                    <form\r\n                        onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        // Conflict check before submit\r\n                        const startDate = editedReservation[\"Start Date\"] || selectedReservation[\"Start Date\"];\r\n                        const endDate = editedReservation[\"End Date\"] || selectedReservation[\"End Date\"];\r\n                        const roomOption = editedReservation[\"Room Option\"] || selectedReservation[\"Room Option\"];\r\n                        const roomNumber = editedReservation[\"Room Number\"] || selectedReservation[\"Room Number\"];\r\n                        const reservationId = selectedReservation[\"Reservation ID\"];\r\n\r\n                        // Helper: get all reservations for this room option, excluding the one being edited\r\n                        const otherReservations = reservationData.filter(\r\n                            r =>\r\n                            r[\"Room Option\"] === roomOption &&\r\n                            r[\"Room Number\"] === roomNumber &&\r\n                            r[\"Reservation ID\"] !== reservationId\r\n                        );\r\n\r\n                        // Helper: get all reservations for this room option (for fully booked logic)\r\n                        const optionReservations = reservationData.filter(\r\n                            r => r[\"Room Option\"] === roomOption && r[\"Reservation ID\"] !== reservationId\r\n                        );\r\n\r\n                        // Helper: get all dates between two dates (inclusive)\r\n                        function getDatesBetween(start, end) {\r\n                            const arr = [];\r\n                            let dt = new Date(start);\r\n                            while (dt <= new Date(end)) {\r\n                            arr.push(dt.toISOString().slice(0, 10));\r\n                            dt.setDate(dt.getDate() + 1);\r\n                            }\r\n                            return arr;\r\n                        }\r\n\r\n                        // 1. Check for overlap with other reservations for the same room/option\r\n                        let conflict = false;\r\n                        for (const r of otherReservations) {\r\n                            const rStart = r[\"Start Date\"];\r\n                            const rEnd = r[\"End Date\"];\r\n                            if (\r\n                            (startDate <= rEnd && endDate >= rStart)\r\n                            ) {\r\n                            conflict = true;\r\n                            break;\r\n                            }\r\n                        }\r\n\r\n                        // 2. Check for fully booked days (adjacent/within)\r\n                        // Build a map of date => count of rooms booked for this option\r\n                        const roomCount =\r\n                            roomOption === \"Dormitory\" ? dormitoryRooms.length :\r\n                            roomOption === \"Double Room Shared Toilet & Shower\" ? doubleSharedRooms.length :\r\n                            roomOption === \"Double Room Private Toilet & Bath\" ? doubleRoomPrivate.length :\r\n                            roomOption === \"Japanese Twin Room\" ? japaneseTwinRooms.length :\r\n                            roomOption === \"4 Bed Room\" ? fourbedRooms.length : 0;\r\n\r\n                        const dateRoomMap = {};\r\n                        for (const r of optionReservations) {\r\n                            const rDates = getDatesBetween(r[\"Start Date\"], r[\"End Date\"]);\r\n                            for (const d of rDates) {\r\n                            dateRoomMap[d] = (dateRoomMap[d] || 0) + 1;\r\n                            }\r\n                        }\r\n\r\n                        // Helper: is a date fully booked for this option?\r\n                        function isFullyBooked(date) {\r\n                            return (dateRoomMap[date] || 0) >= roomCount;\r\n                        }\r\n\r\n                        // Check for adjacent fully booked start date\r\n                        const prevDay = new Date(startDate);\r\n                        prevDay.setDate(prevDay.getDate() - 1);\r\n                        const prevDayStr = prevDay.toISOString().slice(0, 10);\r\n                        if (isFullyBooked(prevDayStr)) {\r\n                            alert(\"Cannot select a start date adjacent to a fully booked day for this room type.\");\r\n                            return;\r\n                        }\r\n\r\n                        // Check for fully booked days strictly between start and end\r\n                        const allDates = getDatesBetween(startDate, endDate);\r\n                        let hasBlockedBetween = false;\r\n                        for (let i = 1; i < allDates.length - 1; i++) {\r\n                            if (isFullyBooked(allDates[i])) {\r\n                            hasBlockedBetween = true;\r\n                            break;\r\n                            }\r\n                        }\r\n                        if (hasBlockedBetween) {\r\n                            alert(\"Cannot select an end date with fully booked days between start and end for this room type.\");\r\n                            return;\r\n                        }\r\n\r\n                        if (conflict) {\r\n                            alert(\"This room is already booked for the selected dates.\");\r\n                            return;\r\n                        }\r\n\r\n                        // If all checks pass, submit as before\r\n                        const updatedReservation = { ...selectedReservation, ...editedReservation };\r\n                        try {\r\n                            const response = await fetch('http://localhost:5000/reservationdataupdate', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify(updatedReservation),\r\n                            credentials: 'include',\r\n                            });\r\n                            if (response.ok) {\r\n                                getReservationData();\r\n                                setSelectedReservation(updatedReservation);\r\n                                setEditReservation(false);\r\n                            }\r\n                        } catch (error) {\r\n                            console.error(\"Failed to Update Reservation: \", error);\r\n                            alert('Error updating reservation.');\r\n                        }\r\n                        }}\r\n                    >\r\n\r\n                        <ul>\r\n                            {/* Name */}\r\n                            <li>\r\n                            <strong>Name:</strong>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={editedReservation[\"Name\"] !== undefined ? editedReservation[\"Name\"] : selectedReservation[\"Name\"]}\r\n                                onChange={e => setEditedReservation(prev => ({ ...prev, [\"Name\"]: e.target.value }))}\r\n                                required\r\n                            />\r\n                            </li>\r\n                            {/* Start Date */}\r\n                            <li>\r\n                            <strong>Start Date:</strong>\r\n                            <input\r\n                                type=\"date\"\r\n                                value={editedReservation[\"Start Date\"] !== undefined ? editedReservation[\"Start Date\"] : selectedReservation[\"Start Date\"]}\r\n                                onChange={e => setEditedReservation(prev => ({ ...prev, [\"Start Date\"]: e.target.value }))}\r\n                                required\r\n                            />\r\n                            </li>\r\n                            {/* End Date */}\r\n                            <li>\r\n                            <strong>End Date:</strong>\r\n                            <input\r\n                                type=\"date\"\r\n                                value={editedReservation[\"End Date\"] !== undefined ? editedReservation[\"End Date\"] : selectedReservation[\"End Date\"]}\r\n                                onChange={e => setEditedReservation(prev => ({ ...prev, [\"End Date\"]: e.target.value }))}\r\n                                required\r\n                            />\r\n                            </li>\r\n                            {/* Room Option */}\r\n                            <li>\r\n                            <strong>Room Option:</strong>\r\n                            <select\r\n                                value={editedReservation[\"Room Option\"] !== undefined ? editedReservation[\"Room Option\"] : selectedReservation[\"Room Option\"]}\r\n                                onChange={e => {\r\n                                    const newRoomOption = e.target.value;\r\n                                    let defaultRoom = \"\";\r\n                                    if (newRoomOption === 'Dormitory') defaultRoom = dormitoryRooms[0];\r\n                                    else if (newRoomOption === 'Double Room Shared Toilet & Shower') defaultRoom = doubleSharedRooms[0];\r\n                                    else if (newRoomOption === 'Double Room Private Toilet & Bath') defaultRoom = doubleRoomPrivate[0];\r\n                                    else if (newRoomOption === 'Japanese Twin Room') defaultRoom = japaneseTwinRooms[0];\r\n                                    else if (newRoomOption === '4 Bed Room') defaultRoom = fourbedRooms[0];\r\n                                    setEditedReservation(prev => ({\r\n                                    ...prev,\r\n                                    [\"Room Option\"]: newRoomOption,\r\n                                    [\"Room Number\"]: defaultRoom // set default room number\r\n                                    }));\r\n                                }}\r\n                                required\r\n                                >\r\n                                {roomTypeOptionsArray.map(opt => (\r\n                                    <option key={opt} value={opt}>{opt}</option>\r\n                                ))}\r\n                                </select>\r\n                            </li>\r\n                            {/* Room Number */}\r\n                            <li>\r\n                            <strong>Room Number:</strong>\r\n                            <select\r\n                                value={editedReservation[\"Room Number\"] !== undefined ? editedReservation[\"Room Number\"] : selectedReservation[\"Room Number\"]}\r\n                                onChange={e => setEditedReservation(prev => ({ ...prev, [\"Room Number\"]: e.target.value }))}\r\n                                required\r\n                            >\r\n                                {(() => {\r\n                                const roomType = editedReservation[\"Room Option\"] !== undefined ? editedReservation[\"Room Option\"] : selectedReservation[\"Room Option\"];\r\n                                if (roomType === 'Dormitory') return dormitoryRooms.map(r => <option key={r} value={r}>{r}</option>);\r\n                                if (roomType === 'Double Room Shared Toilet & Shower') return doubleSharedRooms.map(r => <option key={r} value={r}>{r}</option>);\r\n                                if (roomType === 'Double Room Private Toilet & Bath') return doubleRoomPrivate.map(r => <option key={r} value={r}>{r}</option>);\r\n                                if (roomType === 'Japanese Twin Room') return japaneseTwinRooms.map(r => <option key={r} value={r}>{r}</option>);\r\n                                if (roomType === '4 Bed Room') return fourbedRooms.map(r => <option key={r} value={r}>{r}</option>);\r\n                                return null;\r\n                                })()}\r\n                            </select>\r\n                            </li>\r\n                            {/* People */}\r\n                            <li>\r\n                            <strong>People:</strong>\r\n                            <input\r\n                                type=\"number\"\r\n                                min={1}\r\n                                value={editedReservation[\"People\"] !== undefined ? editedReservation[\"People\"] : selectedReservation[\"People\"]}\r\n                                onChange={e => setEditedReservation(prev => ({ ...prev, [\"People\"]: e.target.value }))}\r\n                                required\r\n                            />\r\n                            </li>\r\n                            {/* Total */}\r\n                            <li>\r\n                                <strong>Total:</strong> ¥{getEditTotal()}\r\n                            </li>\r\n                            {/* Reservation ID (read-only) */}\r\n                            <li>\r\n                            <strong>Reservation ID: </strong>\r\n                                {selectedReservation[\"Reservation ID\"]}\r\n                            </li>\r\n                        </ul>\r\n                        <br />\r\n                        <div className=\"reservationdetailsbuttons\">\r\n                            <button type=\"button\" className=\"closemodalbtn\" onClick={() => setEditReservation(false)}>\r\n                            Cancel\r\n                            </button>\r\n                            <button type=\"submit\" className=\"editreservationbtn\">\r\n                            Save\r\n                            </button>\r\n                        </div>\r\n                        </form>\r\n                ) : (\r\n                    <>\r\n                    <ul>\r\n                        {Object.entries(selectedReservation).map(([key, value]) => (\r\n                        <li key={key}>\r\n                            <strong>{key}:</strong> {value?.toString()}\r\n                        </li>\r\n                        ))}\r\n                    </ul>\r\n                    <br />\r\n                    <div className=\"reservationdetailsbuttons\">\r\n                        <button className=\"closemodalbtn\" onClick={() => setSelectedReservation(null)}>\r\n                        Close Reservation\r\n                        </button>\r\n                        <button className=\"editreservationbtn\" onClick={() => {\r\n                        setEditReservation(true);\r\n                        setEditedReservation(selectedReservation);\r\n                        }}>\r\n                        Edit Reservation\r\n                        </button>\r\n                        <button className=\"deletereservationbtn\" onClick={() => deleteReservation(selectedReservation)}>\r\n                        Delete Reservation\r\n                        </button>\r\n                        <button\r\n                            className=\"showoncalendarbtn\"\r\n                            onClick={() => showOnCalendar(selectedReservation)}\r\n                            >\r\n                            Show On Calendar\r\n                        </button>\r\n                    </div>\r\n                    </>\r\n                )}\r\n                </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    const ReservationCalendarModal = ({ reservation }) => {\r\n        if (!reservation) return null;\r\n\r\n        // Use the month/year of the reservation's start date\r\n        const startDate = new Date(reservation[\"Start Date\"]);\r\n        const endDate = new Date(reservation[\"End Date\"]);\r\n        const year = startDate.getFullYear();\r\n        const month = startDate.getMonth();\r\n\r\n        const daysInMonth = getDaysInMonth(month, year);\r\n        const firstDay = new Date(year, month, 1).getDay();\r\n\r\n        // Get all dates the reservation occupies\r\n        const reservationDates = new Set(getDatesBetween(reservation[\"Start Date\"], reservation[\"End Date\"]));\r\n        const roomNumber = reservation[\"Room Number\"];\r\n\r\n        const rows = [];\r\n        let cells = [];\r\n\r\n        for (let i = 0; i < firstDay; i++) {\r\n            cells.push(<td key={`empty-${i}`}></td>);\r\n        }\r\n\r\n       for (let day = 1; day <= daysInMonth; day++) {\r\n            const yyyy = year;\r\n            const mm = String(month + 1).padStart(2, '0');\r\n            const dd = String(day).padStart(2, '0');\r\n            const dateStr = `${yyyy}-${mm}-${dd}`; // local date string\r\n            const isReserved = reservationDates.has(dateStr);\r\n\r\n            cells.push(\r\n                <td\r\n                    key={`${year}-${month}-${day}`}\r\n                    style={{\r\n                        background: isReserved ? rgb : undefined,\r\n                        textAlign: \"center\",\r\n                        fontWeight: isReserved ? \"bold\" : undefined,\r\n                        color: isReserved ? \"black\" : undefined,\r\n                        position: \"relative\"\r\n                    }}\r\n                >\r\n                    <div className=\"calendardaynumber\">{day}</div>\r\n                    {isReserved && (\r\n                        <div style={{\r\n                            position: \"absolute\",\r\n                            top: \"50%\",\r\n                            left: \"50%\",\r\n                            transform: \"translate(-50%, -50%)\",\r\n                            fontSize: \"1.1em\"\r\n                        }}>\r\n                            {roomNumber}\r\n                        </div>\r\n                    )}\r\n                </td>\r\n            );\r\n            if ((cells.length) % 7 === 0) {\r\n                rows.push(<tr key={`row-${day}`}>{cells}</tr>);\r\n                cells = [];\r\n            }\r\n        }\r\n\r\n        if (cells.length) {\r\n            while (cells.length < 7) {\r\n                cells.push(<td key={`empty-end-${cells.length}`}></td>);\r\n            }\r\n            rows.push(<tr key=\"row-last\">{cells}</tr>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"calendartablewrapper\">\r\n                <table className=\"calendartable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Su</th><th>Mo</th><th>Tu</th><th>We</th><th>Th</th><th>Fr</th><th>Sa</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{rows}</tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const [ editRoomPrices, setEditRoomPrices ] = useState(false);\r\n\r\n    const ChangeRoomPrices = () => {\r\n        // Local state for editing prices\r\n        const [localPrices, setLocalPrices] = useState({\r\n            dormitory: dormitoryPrice,\r\n            doubleShared: doubleSharedPrice,\r\n            doublePrivate: doublePrivatePrice,\r\n            japaneseTwin: japaneseTwinPrice,\r\n            fourBed: fourBedPrice\r\n        });\r\n\r\n        // When entering edit mode, sync local state with context\r\n        useEffect(() => {\r\n            if (editRoomPrices) {\r\n                setLocalPrices({\r\n                    dormitory: dormitoryPrice,\r\n                    doubleShared: doubleSharedPrice,\r\n                    doublePrivate: doublePrivatePrice,\r\n                    japaneseTwin: japaneseTwinPrice,\r\n                    fourBed: fourBedPrice\r\n                });\r\n                window.scrollTo(0, savedScroll);\r\n            }\r\n        }, [editRoomPrices]);\r\n\r\n        // Handlers for input changes\r\n        const handleInputChange = (key, value) => {\r\n            setLocalPrices(prev => ({ ...prev, [key]: value }));\r\n        };\r\n\r\n        // Confirm and update context\r\n        const handleConfirm = () => {\r\n            setDormitoryPrice(localPrices.dormitory);\r\n            setDoubleSharedPrice(localPrices.doubleShared);\r\n            setDoublePrivatePrice(localPrices.doublePrivate);\r\n            setJapenseTwinPrice(localPrices.japaneseTwin);\r\n            setFourBedPrice(localPrices.fourBed);\r\n            setEditRoomPrices(false);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                {!editRoomPrices && (\r\n                    <div className=\"roompricewrapper\">\r\n                        <div className=\"roompricetitle\">\r\n                            <h2>Room Prices</h2>\r\n                        </div>\r\n                        <div className=\"roompriceslist\">\r\n                            <ul>\r\n                                <li>\r\n                                    <h3>Dormitory Price: </h3><p>¥{dormitoryPrice}</p>\r\n                                </li>\r\n                                <li>\r\n                                    <h3>Double Shared Room Price: </h3><p>¥{doubleSharedPrice}</p>\r\n                                </li>\r\n                                <li>\r\n                                    <h3>Double Private Room Price: </h3><p>¥{doublePrivatePrice}</p>\r\n                                </li>\r\n                                <li>\r\n                                    <h3>Japense Twin Room Price: </h3><p>¥{japaneseTwinPrice}</p>\r\n                                </li>\r\n                                <li>\r\n                                    <h3>Four Bed Room Price: </h3><p>¥{fourBedPrice}</p>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n                        <button className=\"editroompricesbtn\" onClick={() => {\r\n                            setSavedScroll(window.scrollY);\r\n                            setEditRoomPrices(true);\r\n                        }}>Edit Room Prices</button>\r\n                    </div>\r\n                )}\r\n\r\n                {editRoomPrices && (\r\n                    <div className=\"roompricewrapper\">\r\n                        <div className=\"roompricetitle\">\r\n                            <h2>Room Prices</h2>\r\n                        </div>\r\n                        <div className=\"roompriceslist\">\r\n                            <ul>\r\n                                <li>\r\n                                    <h3>Dormitory Price: ¥</h3>\r\n                                     <input type=\"number\" value={localPrices.dormitory} onChange={e => handleInputChange('dormitory', e.target.value)} />\r\n                                </li>\r\n                                <li>\r\n                                    <h3>Double Shared Room Price: ¥</h3>\r\n                                    <input type=\"number\" value={localPrices.doubleShared} onChange={e => handleInputChange('doubleShared', e.target.value)} />\r\n                                </li>\r\n                                <li>\r\n                                    <h3>Double Private Room Price: ¥</h3>\r\n                                    <input type=\"number\" value={localPrices.doublePrivate} onChange={e => handleInputChange('doublePrivate', e.target.value)} />\r\n                                </li>\r\n                                <li>\r\n                                    <h3>Japense Twin Room Price: ¥</h3>\r\n                                    <input type=\"number\" value={localPrices.japaneseTwin} onChange={e => handleInputChange('japaneseTwin', e.target.value)} />\r\n                                </li>\r\n                                <li>\r\n                                    <h3>Four Bed Room Price: ¥</h3>\r\n                                    <input type=\"number\" value={localPrices.fourBed} onChange={e => handleInputChange('fourBed', e.target.value)} />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n                        <button className=\"editroompricesbtn\" onClick={handleConfirm}>Confirm Room Prices</button>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <div className=\"bookingsmanager\">\r\n            <h2>Manage Bookings</h2>\r\n            <DisplayMonth/>\r\n            {showReservationCalendar && calendarReservation && (\r\n                <div className=\"reservationcalendaroverlay\" onClick={() => setShowReservationCalendar(false)}>\r\n                    <div className=\"reservationmodalcontentcalendar\" onClick={e => e.stopPropagation()}>\r\n                    <h3>\r\n                        Reservation Calendar For:\r\n                        <br/>\r\n                        {calendarReservation[\"Name\"]} (Room {calendarReservation[\"Room Number\"]})\r\n                    </h3>\r\n                    <br />\r\n                    <ReservationCalendarModal reservation={calendarReservation} />\r\n                    <br/>\r\n                    <button className=\"closemodalbtn\" onClick={() => setShowReservationCalendar(false)}>\r\n                        Close Calendar\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </div>\r\n        <ReservationsTable/>\r\n        <br/>\r\n        <ChangeRoomPrices/>\r\n        <CustomFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManageBookings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}