{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\.vscode\\\\RealEstateAppBackup\\\\realestateappfrontend\\\\realestateapp\\\\src\\\\PayPalButtons_J.js\",\n  _s = $RefreshSig$();\nimport './PayPalButtons.css';\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport emailjs from '@emailjs/browser';\n\n//Declare base path for Paypal requests\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n//Checkout component\nconst Checkout = ({\n  total,\n  cartProducts,\n  onPaymentSuccess\n}) => {\n  _s();\n  //Declare variables\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n\n  //Create order function\n  const createOrder = async () => {\n    //Check if order total is greater than zero\n    if (Number(total) > 0) {\n      //Declare response from post request\n      const response = await axios.post(`${API_BASE_URL}/create-paypal-order`,\n      // Full URL\n      {\n        amount: total.toString()\n      });\n      return response.data.orderID; //Return OrderID from response\n    } else {\n      alert(\"Your Cart is Empty.\");\n    }\n  };\n\n  //Declare on approve function\n  const onApprove = async data => {\n    //Attempt Post request\n    try {\n      const captureResponse = await axios.post(`${API_BASE_URL}/capture-paypal-order`, {\n        orderID: data.orderID,\n        cartProducts: cartProducts\n      });\n      const orderDetails = captureResponse.data.orderDetails; // Unpack Backend Response to obtain orderDetails\n\n      // Prepare template params for EmailJS\n      const templateParams = {\n        payer_name: orderDetails.payerName,\n        payer_email: orderDetails.emailEmail,\n        orderID: orderDetails.paypalOrderId\n      };\n\n      //Send email.js message\n      await emailjs.send('service_nq9jxwl', 'template_lvig8nl', templateParams, '5xgP6vguaJHGTQ-E4');\n      alert(\"Payment Successful!\");\n      onPaymentSuccess();\n      setError(null);\n    } catch (err) {\n      console.error(\"Capture error:\", err);\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkout-container\",\n      children: [Number(total) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartmessage\",\n        children: \"\\u30AB\\u30FC\\u30C8\\u306F\\u7A7A\\u3067\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PayPalButtons, {\n        style: {\n          layout: \"vertical\"\n        },\n        createOrder: createOrder,\n        onApprove: onApprove,\n        onError: err => {\n          console.error(\"Paypal Error: \", err);\n        },\n        disabled: isProcessing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Checkout, \"W5yHfJJxnjPVO+6REkksNaWV+SM=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["PayPalButtons","useState","useEffect","axios","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","Checkout","total","cartProducts","onPaymentSuccess","_s","isProcessing","setIsProcessing","error","setError","createOrder","Number","response","post","amount","toString","data","orderID","alert","onApprove","captureResponse","orderDetails","templateParams","payer_name","payerName","payer_email","emailEmail","paypalOrderId","send","err","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","layout","onError","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kevin/.vscode/RealEstateAppBackup/realestateappfrontend/realestateapp/src/PayPalButtons_J.js"],"sourcesContent":["import './PayPalButtons.css';\r\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport emailjs from '@emailjs/browser';\r\n\r\n//Declare base path for Paypal requests\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n//Checkout component\r\nconst Checkout = ({total, cartProducts, onPaymentSuccess}) => {\r\n\r\n    //Declare variables\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    //Create order function\r\n    const createOrder = async () => {\r\n        //Check if order total is greater than zero\r\n        if (Number(total) > 0) {\r\n\r\n            //Declare response from post request\r\n            const response = await axios.post(\r\n                `${API_BASE_URL}/create-paypal-order`, // Full URL\r\n                { amount: total.toString() }\r\n            );\r\n\r\n            return response.data.orderID; //Return OrderID from response\r\n        } else {\r\n            alert(\"Your Cart is Empty.\");\r\n        }\r\n    };\r\n\r\n\r\n    //Declare on approve function\r\n    const onApprove = async (data) => {\r\n\r\n        //Attempt Post request\r\n        try {\r\n            const captureResponse = await axios.post(\r\n                `${API_BASE_URL}/capture-paypal-order`,\r\n                {\r\n                    orderID: data.orderID,\r\n                    cartProducts: cartProducts\r\n                }\r\n            );\r\n\r\n        const orderDetails = captureResponse.data.orderDetails; // Unpack Backend Response to obtain orderDetails\r\n\r\n        // Prepare template params for EmailJS\r\n        const templateParams = {\r\n            payer_name: orderDetails.payerName,\r\n            payer_email: orderDetails.emailEmail,\r\n            orderID: orderDetails.paypalOrderId\r\n        };\r\n\r\n        //Send email.js message\r\n        await emailjs.send(\r\n            'service_nq9jxwl',\r\n            'template_lvig8nl',\r\n            templateParams,\r\n            '5xgP6vguaJHGTQ-E4'\r\n        );\r\n\r\n        alert(\"Payment Successful!\");\r\n        onPaymentSuccess();\r\n        setError(null);\r\n        } catch (err) {\r\n            console.error(\"Capture error:\", err);\r\n            throw err;\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"checkout-container\">\r\n            {Number(total) === 0 && <div className=\"cartmessage\">カートは空です</div>}\r\n            <br/>\r\n            <br/>\r\n            <PayPalButtons\r\n                style={{ layout: \"vertical\" }}\r\n                createOrder = {createOrder}\r\n                onApprove = {onApprove}\r\n                onError={(err) => { console.error(\"Paypal Error: \", err);\r\n                }}\r\n\r\n                disabled={isProcessing}\r\n            />\r\n        </div>\r\n     </>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,kBAAkB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAACC,KAAK;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAE1D;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,IAAIC,MAAM,CAACT,KAAK,CAAC,GAAG,CAAC,EAAE;MAEnB;MACA,MAAMU,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAC7B,GAAGb,YAAY,sBAAsB;MAAE;MACvC;QAAEc,MAAM,EAAEZ,KAAK,CAACa,QAAQ,CAAC;MAAE,CAC/B,CAAC;MAED,OAAOH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC;IAClC,CAAC,MAAM;MACHC,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ,CAAC;;EAGD;EACA,MAAMC,SAAS,GAAG,MAAOH,IAAI,IAAK;IAE9B;IACA,IAAI;MACA,MAAMI,eAAe,GAAG,MAAM1B,KAAK,CAACmB,IAAI,CACpC,GAAGb,YAAY,uBAAuB,EACtC;QACIiB,OAAO,EAAED,IAAI,CAACC,OAAO;QACrBd,YAAY,EAAEA;MAClB,CACJ,CAAC;MAEL,MAAMkB,YAAY,GAAGD,eAAe,CAACJ,IAAI,CAACK,YAAY,CAAC,CAAC;;MAExD;MACA,MAAMC,cAAc,GAAG;QACnBC,UAAU,EAAEF,YAAY,CAACG,SAAS;QAClCC,WAAW,EAAEJ,YAAY,CAACK,UAAU;QACpCT,OAAO,EAAEI,YAAY,CAACM;MAC1B,CAAC;;MAED;MACA,MAAMhC,OAAO,CAACiC,IAAI,CACd,iBAAiB,EACjB,kBAAkB,EAClBN,cAAc,EACd,mBACJ,CAAC;MAEDJ,KAAK,CAAC,qBAAqB,CAAC;MAC5Bd,gBAAgB,CAAC,CAAC;MAClBK,QAAQ,CAAC,IAAI,CAAC;IACd,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACVC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,EAAEqB,GAAG,CAAC;MACpC,MAAMA,GAAG;IACb;EACJ,CAAC;EAGD,oBACIhC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,eACAlC,OAAA;MAAKmC,SAAS,EAAC,oBAAoB;MAAAD,QAAA,GAC9BpB,MAAM,CAACT,KAAK,CAAC,KAAK,CAAC,iBAAIL,OAAA;QAAKmC,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClEvC,OAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLvC,OAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLvC,OAAA,CAACN,aAAa;QACV8C,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAW,CAAE;QAC9B5B,WAAW,EAAIA,WAAY;QAC3BS,SAAS,EAAIA,SAAU;QACvBoB,OAAO,EAAGV,GAAG,IAAK;UAAEC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,EAAEqB,GAAG,CAAC;QACxD,CAAE;QAEFW,QAAQ,EAAElC;MAAa;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACP,CAAC;AAER,CAAC;AAAC/B,EAAA,CAlFIJ,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAoFd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}